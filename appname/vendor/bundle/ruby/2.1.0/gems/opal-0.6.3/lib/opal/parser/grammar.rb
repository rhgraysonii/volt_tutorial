#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,557,534,584,57,58,589,596,557,61,269,59,60,62,23,24,66',
'67,880,-501,-64,202,203,22,28,27,89,88,90,91,607,100,17,202,203,-82',
'99,626,7,41,6,9,93,92,626,83,50,85,84,86,-444,87,94,95,-92,81,82,-75',
'38,39,202,203,-84,586,585,202,203,202,203,595,625,-84,-435,73,626,574',
'622,625,-92,-435,36,74,626,30,-501,557,52,888,766,54,269,32,557,-91',
'889,40,268,-435,-88,557,-90,759,-82,18,-435,-501,533,625,79,73,75,76',
'77,78,100,625,556,74,80,99,392,100,697,556,845,56,99,-435,53,-84,-83',
'37,63,64,65,8,51,565,822,-82,57,58,887,202,203,61,-82,59,60,62,23,24',
'66,67,304,264,304,566,697,22,28,27,89,88,90,91,-84,-92,17,-92,269,-503',
'-92,-84,7,41,268,9,93,92,573,83,50,85,84,86,-89,87,94,95,584,81,82,224',
'38,39,-503,-83,100,100,556,754,-437,99,99,100,-91,556,-91,-437,99,-91',
'100,-90,556,-90,36,99,-90,30,665,100,52,696,221,54,99,32,223,222,584',
'40,100,261,-83,264,-442,99,764,18,262,-83,553,-442,79,73,75,76,77,78',
'586,585,591,74,80,697,268,100,-268,696,392,56,99,552,53,-268,-274,37',
'63,64,65,-438,51,-274,-274,-274,57,58,-438,-274,-274,61,-274,59,60,62',
'255,256,66,67,586,585,587,788,769,254,287,291,89,88,90,91,-274,-274',
'216,-274,-274,-274,-274,-274,264,41,742,-268,93,92,753,83,50,85,84,86',
'-443,87,94,95,584,81,82,-443,38,39,543,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,202,203,-274,-274,-274,207,615',
'100,211,696,-274,52,99,-90,54,526,264,-274,525,-274,40,-274,-274,-274',
'-274,-274,-274,-274,215,-274,-443,-274,541,79,73,75,76,77,78,586,585',
'100,74,80,-274,-274,99,-85,726,-274,56,437,-274,53,-93,-507,37,63,64',
'65,-441,51,-507,-507,-507,57,58,-441,-507,-507,61,-507,59,60,62,255',
'256,66,67,526,-507,769,528,564,254,287,291,89,88,90,91,-507,-507,216',
'-507,-507,-507,-507,-507,-95,41,743,526,93,92,528,83,50,85,84,86,258',
'87,94,95,584,81,82,526,38,39,528,-507,-507,-507,-507,-507,-507,-507',
'-507,-507,-507,-507,-507,-507,-507,513,540,-507,-507,-507,207,612,100',
'211,-439,-507,52,99,-92,54,224,-439,-507,251,-507,40,-507,-507,-507',
'-507,-507,-507,-507,215,-507,-507,-507,224,79,73,75,76,77,78,586,585',
'582,74,80,-507,-507,100,-83,-94,-507,56,99,-507,53,-91,-507,37,63,64',
'65,537,51,-507,-507,-507,57,58,-507,-507,-507,61,-507,59,60,62,255,256',
'66,67,769,-507,-507,-507,474,254,287,291,89,88,90,91,-507,-507,216,-507',
'-507,-507,-507,-507,563,41,564,472,93,92,775,83,50,85,84,86,258,87,94',
'95,584,81,82,776,38,39,540,-507,-507,-507,-507,-507,-507,-507,-507,-507',
'-507,-507,-507,-507,-507,297,298,-507,-507,-507,207,744,-507,211,543',
'-507,52,474,-507,54,-507,631,-507,251,-507,40,-507,-507,-507,-507,-507',
'-507,-507,215,-507,-507,-507,779,79,73,75,76,77,78,586,585,597,74,80',
'-507,-507,-507,-507,780,-507,56,606,-507,53,-91,642,37,63,64,65,-321',
'51,643,400,579,57,58,-321,402,401,61,580,59,60,62,23,24,66,67,102,103',
'104,105,106,22,28,27,89,88,90,91,100,-82,17,-275,-444,99,543,602,-90',
'41,-275,304,93,92,783,83,50,85,84,86,199,87,94,95,-321,81,82,200,38',
'39,745,224,228,233,234,235,230,232,240,241,236,237,433,217,218,-80,100',
'238,239,434,207,99,-88,211,-432,648,52,590,-275,54,769,-432,221,251',
'227,40,223,222,219,220,231,229,225,18,226,198,792,642,79,73,75,76,77',
'78,643,793,-440,74,80,-275,242,481,-227,-440,530,56,-275,435,53,529',
'-274,37,63,64,65,-503,51,-274,-274,-274,57,58,-274,-274,-274,61,-274',
'59,60,62,255,256,66,67,304,796,-274,-274,594,254,287,291,89,88,90,91',
'-274,-274,216,-274,-274,-274,-274,-274,-275,288,340,339,93,92,481,83',
'50,85,84,86,-276,87,94,95,598,81,82,-276,509,510,304,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,513,224,-274',
'-274,-274,285,615,-274,282,601,-274,52,604,-274,54,-274,804,-274,806',
'-274,809,-274,-274,-274,-274,-274,-274,-274,810,-274,-276,-274,515,79',
'73,75,76,77,78,788,769,-86,74,80,-274,-274,-274,-274,-94,-274,56,812',
'-274,53,-93,-282,292,63,64,65,-255,51,-282,-282,-282,57,58,-282,-282',
'-282,61,-282,59,60,62,255,256,66,67,340,339,-282,-282,514,254,28,27',
'89,88,90,91,-282,-282,216,-282,-282,-282,-282,-282,-254,41,-256,728',
'93,92,264,83,50,85,84,86,258,87,94,95,304,81,82,273,38,39,507,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,732,500',
'-282,-282,-282,207,499,-282,211,273,-282,52,498,-282,54,-282,253,-282',
'-63,-282,40,-282,-282,-282,-282,-282,-282,-282,215,-282,605,-282,264',
'79,73,75,76,77,78,823,824,-81,74,80,-282,-282,-282,-282,-89,-282,56',
'825,-282,53,264,-523,37,63,64,65,264,51,-523,-523,-523,57,58,-523,-523',
'-523,61,-523,59,60,62,255,256,66,67,700,-523,-523,-523,243,254,287,291',
'89,88,90,91,-523,-523,216,-523,-523,-523,-523,-523,564,41,828,829,93',
'92,665,83,50,85,84,86,481,87,94,95,831,81,82,474,38,39,-254,-523,-523',
'-523,-523,-523,-523,-523,-523,-523,-523,-523,-523,-523,-523,201,835',
'-523,-523,-523,207,472,-523,211,264,-523,52,224,-523,54,-523,224,-523',
'840,-523,40,-523,-523,-523,-523,-523,-523,-523,215,-523,-523,-523,470',
'79,73,75,76,77,78,842,212,-87,74,80,-523,-523,-523,-523,-95,-523,56',
'439,-523,53,438,-269,37,63,64,65,224,51,-269,-269,-269,57,58,-269,-269',
'-269,61,-269,59,60,62,255,256,66,67,848,850,-269,-269,-269,254,287,291',
'89,88,90,91,-269,-269,216,-269,-269,-269,-269,-269,851,41,304,692,93',
'92,224,83,50,85,84,86,-443,87,94,95,689,81,82,-443,38,39,436,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,861,-257',
'-269,-269,-269,207,687,-269,211,403,-269,52,862,-269,54,-269,864,-269',
'677,-269,40,-269,-269,-269,-269,-269,-269,-269,215,-269,-443,-269,390',
'79,73,75,76,77,78,381,-504,543,74,80,-269,-269,-269,-269,378,-269,56',
'-269,-269,53,874,-370,37,63,64,65,875,51,-370,-370,-370,57,58,-370,-370',
'-370,61,-370,59,60,62,255,256,66,67,673,-370,-370,-370,672,254,28,27',
'89,88,90,91,-370,-370,216,-370,-370,-370,-370,-370,304,41,760,881,93',
'92,809,83,50,85,84,86,258,87,94,95,809,81,82,810,38,39,671,-370,-370',
'-370,-370,-370,-370,-370,-370,-370,-370,-370,-370,-370,-370,665,296',
'-370,-370,-370,207,519,-370,211,264,-370,52,295,-370,54,-370,253,-370',
'890,-370,40,-370,-370,-370,-370,-370,-370,-370,215,-370,-370,-370,657',
'79,73,75,76,77,78,243,655,-75,74,80,-370,-370,-370,-370,896,-370,56',
'654,-370,53,652,-523,37,63,64,65,671,51,-523,-523,-523,57,58,-523,-523',
'-523,61,-523,59,60,62,255,256,66,67,197,196,-523,195,194,254,287,291',
'89,88,90,91,-523,-523,216,-523,-523,-523,-523,-523,639,41,906,809,93',
'92,908,83,50,85,84,86,-275,87,94,95,909,81,82,-275,38,39,107,224,228',
'233,234,235,230,232,240,241,236,237,-523,217,218,243,644,238,239,-523',
'207,96,304,211,264,-523,52,,,54,,,221,,227,40,223,222,219,220,231,229',
'225,215,226,-275,-523,,79,73,75,76,77,78,,,,74,80,-523,242,-523,-227',
',-523,56,,,53,,-523,37,63,64,65,8,51,-523,-523,-523,57,58,-523,-523',
'-523,61,-523,59,60,62,23,24,66,67,,,-523,,,22,28,27,89,88,90,91,-523',
'-523,17,-523,-523,-523,-523,-523,7,41,,9,93,92,,83,50,85,84,86,505,87',
'94,95,,81,82,506,38,39,,224,228,233,234,235,230,232,240,241,236,237',
'-523,217,218,-268,,238,239,-523,36,,-268,30,264,-523,52,,,54,,32,221',
',227,40,223,222,219,220,231,229,225,18,226,504,-523,224,79,73,75,76',
'77,78,,570,516,74,80,-523,242,-523,568,517,-523,56,,,53,,-268,37,63',
'64,65,8,51,,221,,57,58,223,222,,61,,59,60,62,23,24,66,67,102,103,104',
'105,106,22,28,27,89,88,90,91,,,17,570,569,435,,602,7,41,778,9,93,92',
',83,50,85,84,86,-276,87,94,95,,81,82,-276,38,39,,224,228,233,234,235',
'230,232,240,241,236,237,-274,217,218,-274,,238,239,-274,36,,-274,30',
'-504,,52,-504,569,54,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,-276,,,79,73,75,76,77,78,-274,,,74,80,,242,-274,,,679,56,-504,-274',
'53,,-274,37,63,64,65,,51,,814,815,57,58,816,94,95,61,,59,60,62,23,24',
'66,67,102,103,104,105,106,22,28,27,89,88,90,91,,,17,-274,337,336,340',
'339,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,212,,52',
',,54,,,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76',
'77,78,,,,74,80,,242,623,,857,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,337,336,340',
'339,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,679,,238,239,,207,,,211,,,52',
',,54,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,242,337,336,340,339,56,,,53,,,37,63,64,65,224,51,,,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,221,,17',
',223,222,219,220,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',224,228,233,234,235,230,232,240,241,236,237,,217,218,857,,238,239,',
'207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,242,337,336,340,339,56,,,53,,,37,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,545,17,332,330,329,,331,7,41,,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64',
'65,224,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88',
'90,91,221,,216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,258,87,94',
'95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,',
'81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,',
',238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81',
'82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,207,,,211,,,52,,,54,,631,221,,227,40,223,222,219,220,231,229,225',
'215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39',
',224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207',
',,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215,226,,',
',79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234',
'235,230,232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,54,,32',
'221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78',
',,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241',
'236,237,,217,218,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222',
'219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56',
',,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,36,,,277,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,224,228',
'233,234,235,230,232,240,241,236,237,224,217,218,,,238,239,,,,,,285,',
',282,238,239,52,,221,54,227,281,223,222,219,220,231,229,225,221,226',
'227,,223,222,219,220,,79,73,75,76,77,78,,,242,74,80,,545,,332,330,329',
'56,331,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,548,254,287,291,89,88,90,91,785,545,216,332,330,329,,331,,288,,',
'93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329,224,331,,,,',
',548,,,,,,,,551,238,239,285,,,211,,,52,,,54,,,,221,,334,,223,222,219',
'220,,,337,336,340,339,,79,73,75,76,77,78,747,,,74,80,,,,294,,,56,,,53',
',,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,545,216,332,330,329,,331,,288,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,323,,332,330,329,,331,,,,,,548,,,,,,,,551,,,683',
',,211,,,52,,,54,,,,,,334,318,,,,,,,337,336,340,339,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,292,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36,,,30',
',,52,,,54,,32,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36',
',,30,,,52,,,54,,32,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,',
'238,239,,207,,,211,,,52,,,54,,631,221,251,227,40,223,222,219,220,,,225',
'215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224',
'-524,-524,-524,-524,230,232,,,-524,-524,,,,,,238,239,,207,,,211,,,52',
',,54,,409,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,-524,-524,,,238,239,,207,,,211,,,52,,,54,,,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524,-524,230,232,,,-524',
'-524,,,,,,238,239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,224,-524,-524,-524,-524,230,232,,,-524,-524,,,,,,238,239,,36,,,30',
',,52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524,-524',
'230,232,,,-524,-524,,,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40',
'223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,-524,-524,-524,-524,230,232,,,-524,-524,,,',
',,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,,,236,237,,,,,,238,239,,207,,,211,,,52,,,54,,,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,-524,-524,,,238,239,,207,,,211,,,52,,,54,,253,221,,227,40,223,222',
'219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94',
'95,,81,82,,38,39,,224,228,233,234,235,230,232,240,,236,237,,,,,,238',
'239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215',
'226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,-524',
'-524,-524,-524,230,232,,,-524,-524,,,,,,238,239,,207,,,211,,,52,,,54',
',253,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36',
',,30,,,52,,,54,,32,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239',
',207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,100,,,,,99,56,,,53,,,37,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,720,,332,330,329',
',331,,,,,,,,,,,,,,,,,285,,,30,,,52,,,54,,32,,,,334,,,,,,,,337,336,340',
'339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,,83,50,85,84,351,,87,94,95,,81,82,720,,332,330,329',
',331,,,,,,,,,,,,,,357,,,352,,,211,,,52,,,54,,,,,,334,,,,,,,,337,336',
'340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,631,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,720,,332',
'330,329,,331,,,,,,,,,,,,,,,,,869,,,211,,,52,,,54,,,,,,334,714,,,,,,',
'337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,-500,-500,-500,,-500,,,,-500',
'-500,,,,-500,,-500,-500,-500,-500,-500,-500,-500,,-500,,,,-500,-500',
'-500,-500,-500,-500,-500,,,-500,,,,,,,-500,,,-500,-500,,-500,-500,-500',
'-500,-500,-500,-500,-500,-500,,-500,-500,,-500,-500,,,,,,,,,,,,,,,,',
',,,,-500,,,-500,-500,,-500,,,-500,,-500,,-500,,-500,,,,,,,,-500,,-500',
',,-500,-500,-500,-500,-500,-500,,,,-500,-500,,,,,,,-500,,,-500,,,-500',
'-501,-501,-501,,-501,,,,-501,-501,,,,-501,,-501,-501,-501,-501,-501',
'-501,-501,,-501,,,,-501,-501,-501,-501,-501,-501,-501,,,-501,,,,,,,-501',
',,-501,-501,,-501,-501,-501,-501,-501,-501,-501,-501,-501,,-501,-501',
',-501,-501,,,,,,,,,,,,,,,,,,,,,-501,,,-501,-501,,-501,,,-501,,-501,',
'-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501,-501,-501,,,,-501',
'-501,,,,,,,-501,,,-501,,,-501,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,392,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,-506,-506,-506,,-506,,,,-506,-506,,,,-506,,-506,-506,-506',
'-506,-506,-506,-506,,,,,,-506,-506,-506,-506,-506,-506,-506,,,-506,',
',,,,,-506,,,-506,-506,,-506,-506,-506,-506,-506,-506,-506,-506,-506',
',-506,-506,,-506,-506,,,,,,,,,,,,,,,,,,,,,-506,,,-506,-506,,-506,,,-506',
',-506,,-506,,-506,,,,,,,,-506,,,,,-506,-506,-506,-506,-506,-506,,,,-506',
'-506,,,,,,,-506,,,-506,,,-506,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,409,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,409,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,',
',,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,-505,-505,-505,,-505,,,,-505,-505',
',,,-505,,-505,-505,-505,-505,-505,-505,-505,,,,,,-505,-505,-505,-505',
'-505,-505,-505,,,-505,,,,,,,-505,,,-505,-505,,-505,-505,-505,-505,-505',
'-505,-505,-505,-505,,-505,-505,,-505,-505,,,,,,,,,,,,,,,,,,,,,-505,',
',-505,-505,,-505,,,-505,,-505,,-505,,-505,,,,,,,,-505,,,,,-505,-505',
'-505,-505,-505,-505,,,,-505,-505,,,,,,,-505,,,-505,,,-505,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,441',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,731,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253',
',251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,490,,,54,,253,,251,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,207,,,211,,494,52,,,54,,253,,251,,40,,,,,,,,215,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,207,,,211,,,52,,,54,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,277,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,323,,332,330,329,,331,,,,,,,,,,,,,,,,,285,,,211',
',,52,,,54,,,,,,334,,536,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74',
'80,,,,502,,,56,,,53,,,292,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'288,,,93,92,,83,50,85,84,351,,87,94,95,,81,82,323,,332,330,329,,331',
',,,,,,,,,,,,,,,,352,,,211,,,52,,,54,,,,,,334,,,,,,,,337,336,340,339',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
'720,,332,330,329,,331,,,,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,334,714',
',,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,631,,251,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,519,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,,,,,',
',,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180',
'188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151',
'170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,',
',,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
',,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,',
'143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125',
'117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187',
'190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181',
'176,175,168,178,163,151,170,169,182,183,184,185,186,150,157,148,149',
'146,147,,110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172',
'162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165',
'158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150',
'157,148,149,146,147,,110,112,109,,111,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156',
'179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167',
'171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184',
'185,186,150,157,148,149,146,147,,110,112,388,387,111,,389,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155',
'166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164',
'153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182',
'183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183',
'184,185,186,150,157,148,149,146,147,,110,112,388,387,111,,389,,,,,,',
'141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,',
',,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145',
'155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189',
'164,153,167,171,173,165,158,,,,174,181,176,366,365,367,364,151,170,169',
'182,183,184,185,186,150,157,148,149,362,363,,360,112,85,84,361,,87,',
',,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,371,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'662,427,145,,663,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,618,427,145,,619,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,478,421,145,,479,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,478,421,145,',
'479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,706,427,145,,837,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,478,421,145,,479,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,616,421,145,,617,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,478,421,145',
',479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,706,427,145,,704,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,659,421,145,,660,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,901,421,145,,902,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'903,427,145,,904,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,423,427,145,,425,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,417,421,145,,418,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,',
',,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,478,421,145',
',479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,616,421,145,,617,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,618,427,145,,619,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,,,145' ]
        racc_action_table = arr = ::Array.new(23176, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,344,317,377,0,0,377,382,794,0,55,0,0,0,0,0,0,0,852,351,654',
'440,440,0,0,0,0,0,0,0,418,574,0,669,669,659,574,468,0,0,0,0,0,0,491',
'0,0,0,0,0,206,0,0,0,902,0,0,654,0,0,15,15,660,377,377,306,306,581,581',
'382,468,418,351,71,481,356,440,491,418,351,0,71,492,0,351,834,0,868',
'669,0,289,0,841,903,868,0,55,361,206,343,901,646,659,0,361,351,317,481',
'0,0,0,0,0,0,344,492,344,0,0,344,349,794,560,794,794,0,794,351,0,660',
'662,0,496,496,496,496,496,350,745,659,496,496,868,711,711,496,659,496',
'496,496,496,496,496,496,306,289,581,352,795,496,496,496,496,496,496',
'496,660,902,496,902,26,903,902,660,496,496,289,496,496,496,356,496,496',
'496,496,496,745,496,496,496,379,496,496,445,496,496,662,662,834,356',
'834,641,365,834,356,841,903,841,903,365,841,903,343,901,343,901,496',
'343,901,496,656,560,496,560,445,496,560,496,445,445,375,496,711,25,662',
'26,362,711,658,496,25,662,341,362,496,496,496,496,496,496,379,379,379',
'496,496,559,26,795,870,795,496,496,795,338,496,870,425,496,474,474,474',
'366,474,425,425,425,474,474,366,425,425,474,425,474,474,474,474,474',
'474,474,375,375,375,891,891,474,474,474,474,474,474,474,425,425,474',
'425,425,425,425,425,661,474,616,870,474,474,640,474,474,474,474,474',
'867,474,474,474,592,474,474,867,474,474,326,425,425,425,425,425,425',
'425,425,425,425,425,425,425,425,342,342,425,425,425,474,425,559,474',
'559,425,474,559,616,474,309,664,425,309,425,474,425,425,425,425,425',
'425,425,474,425,867,425,325,474,474,474,474,474,474,592,592,3,474,474',
'425,425,3,425,592,425,474,208,425,474,425,423,474,472,472,472,363,472',
'423,423,423,472,472,363,423,423,472,423,472,472,472,472,472,472,472',
'313,423,877,313,877,472,472,472,472,472,472,472,423,423,472,423,423',
'423,423,423,208,472,617,674,472,472,674,472,472,472,472,472,472,472',
'472,472,373,472,472,310,472,472,310,423,423,423,423,423,423,423,423',
'423,423,423,423,423,423,436,323,423,423,423,472,423,347,472,367,423',
'472,347,617,472,667,367,423,472,423,472,423,423,423,423,423,423,423',
'472,423,423,423,668,472,472,472,472,472,472,373,373,373,472,472,423',
'423,709,423,436,423,472,709,423,472,423,618,472,470,470,470,322,470',
'618,618,618,470,470,618,618,618,470,618,470,470,470,470,470,470,470',
'670,618,618,618,630,470,470,470,470,470,470,470,618,618,470,618,618',
'618,618,618,348,470,348,628,470,470,675,470,470,470,470,470,470,470',
'470,470,384,470,470,676,470,470,679,618,618,618,618,618,618,618,618',
'618,618,618,618,618,618,37,37,618,618,618,470,618,618,470,681,618,470',
'314,618,470,618,470,618,470,618,470,618,618,618,618,618,618,618,470',
'618,618,618,683,470,470,470,470,470,470,384,384,384,470,470,618,618',
'618,618,684,618,470,417,618,470,618,757,470,490,490,490,42,490,757,109',
'369,490,490,42,109,109,490,369,490,490,490,490,490,490,490,653,653,653',
'653,653,490,490,490,490,490,490,490,715,417,490,566,35,715,685,407,417',
'490,566,757,490,490,688,490,490,490,490,490,13,490,490,490,42,490,490',
'13,490,490,620,407,407,407,407,407,407,407,407,407,407,407,205,407,407',
'35,274,407,407,205,490,274,35,490,360,490,490,378,566,490,693,360,407',
'490,407,490,407,407,407,407,407,407,407,490,407,13,699,485,490,490,490',
'490,490,490,485,701,364,490,490,507,407,613,407,364,312,490,507,205',
'490,311,619,490,502,502,502,706,502,619,619,619,502,502,619,619,619',
'502,619,502,502,502,502,502,502,502,485,707,619,619,381,502,502,502',
'502,502,502,502,619,619,502,619,619,619,619,619,507,502,809,809,502',
'502,608,502,502,502,502,502,764,502,502,502,398,502,502,764,292,292',
'308,619,619,619,619,619,619,619,619,619,619,619,619,619,619,296,301',
'619,619,619,502,619,619,502,404,619,502,410,619,502,619,716,619,717',
'619,718,619,619,619,619,619,619,619,720,619,764,619,298,502,502,502',
'502,502,502,691,691,296,502,502,619,619,619,619,296,619,502,723,619',
'502,619,28,502,504,504,504,603,504,28,28,28,504,504,28,28,28,504,28',
'504,504,504,504,504,504,504,543,543,28,28,297,504,504,504,504,504,504',
'504,28,28,504,28,28,28,28,28,412,504,730,596,504,504,291,504,504,504',
'504,504,504,504,504,504,288,504,504,287,504,504,285,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,605,280,28,28,28,504,279,28,504,28,28,504,278',
'28,504,28,504,28,276,28,504,28,28,28,28,28,28,28,504,28,416,28,424,504',
'504,504,504,504,504,748,749,605,504,504,28,28,28,28,605,28,504,752,28',
'504,755,419,504,513,513,513,756,513,419,419,419,513,513,419,419,419',
'513,419,513,513,513,513,513,513,513,562,419,419,419,758,513,513,513',
'513,513,513,513,419,419,513,419,419,419,419,419,561,513,761,762,513',
'513,763,513,513,513,513,513,263,513,513,513,767,513,513,252,513,513',
'770,419,419,419,419,419,419,419,419,419,419,419,419,419,419,14,771,419',
'419,419,513,249,419,513,419,419,513,446,419,513,419,447,419,786,419',
'513,419,419,419,419,419,419,419,513,419,419,419,248,513,513,513,513',
'513,513,789,216,14,513,513,419,419,419,419,14,419,513,210,419,513,209',
'50,513,514,514,514,448,514,50,50,50,514,514,50,50,50,514,50,514,514',
'514,514,514,514,514,797,800,50,50,50,514,514,514,514,514,514,514,50',
'50,514,50,50,50,50,50,801,514,802,555,514,514,449,514,514,514,514,514',
'283,514,514,514,550,514,514,283,514,514,207,50,50,50,50,50,50,50,50',
'50,50,50,50,50,50,818,819,50,50,50,514,546,50,514,192,50,514,826,50',
'514,50,827,50,535,50,514,50,50,50,50,50,50,50,514,50,283,50,96,514,514',
'514,514,514,514,78,837,838,514,514,50,50,50,50,77,50,514,50,50,514,843',
'27,514,887,887,887,844,887,27,27,27,887,887,27,27,27,887,27,887,887',
'887,887,887,887,887,522,27,27,27,521,887,887,887,887,887,887,887,27',
'27,887,27,27,27,27,27,41,887,649,853,887,887,854,887,887,887,887,887',
'887,887,887,887,856,887,887,857,887,887,520,27,27,27,27,27,27,27,27',
'27,27,27,27,27,27,511,36,27,27,27,887,508,27,887,27,27,887,34,27,887',
'27,887,27,869,27,887,27,27,27,27,27,27,27,887,27,27,27,503,887,887,887',
'887,887,887,20,501,498,887,887,27,27,27,27,879,27,887,497,27,887,493',
'480,887,515,515,515,886,515,480,480,480,515,515,480,480,480,515,480',
'515,515,515,515,515,515,515,12,11,480,10,9,515,515,515,515,515,515,515',
'480,480,515,480,480,480,480,480,483,515,895,897,515,515,898,515,515',
'515,515,515,890,515,515,515,900,515,515,890,515,515,6,645,645,645,645',
'645,645,645,645,645,645,645,480,645,645,487,486,645,645,480,515,1,484',
'515,480,480,515,,,515,,,645,,645,515,645,645,645,645,645,645,645,515',
'645,890,480,,515,515,515,515,515,515,,,,515,515,480,645,480,645,,480',
'515,,,515,,477,515,885,885,885,885,885,477,477,477,885,885,477,477,477',
'885,477,885,885,885,885,885,885,885,,,477,,,885,885,885,885,885,885',
'885,477,477,885,477,477,477,477,477,885,885,,885,885,885,,885,885,885',
'885,885,284,885,885,885,,885,885,284,885,885,,415,415,415,415,415,415',
'415,415,415,415,415,477,415,415,286,,415,415,477,885,,286,885,477,477',
'885,,,885,,885,415,,415,885,415,415,415,415,415,415,415,885,415,284',
'477,444,885,885,885,885,885,885,,354,299,885,885,477,415,477,354,299',
'477,885,,,885,,286,885,878,878,878,878,878,,444,,878,878,444,444,,878',
',878,878,878,878,878,878,878,275,275,275,275,275,878,878,878,878,878',
'878,878,,,878,682,354,299,,621,878,878,682,878,878,878,,878,878,878',
'878,878,909,878,878,878,,878,878,909,878,878,,621,621,621,621,621,621',
'621,621,621,621,621,704,621,621,663,,621,621,704,878,,663,878,704,,878',
'663,682,878,,878,621,,621,878,621,621,621,621,621,621,621,878,621,909',
',,878,878,878,878,878,878,904,,,878,878,,621,904,,,780,878,904,704,878',
',663,878,17,17,17,,17,,724,724,17,17,724,724,724,17,,17,17,17,17,17',
'17,17,5,5,5,5,5,17,17,17,17,17,17,17,,,17,904,780,780,780,780,,17,,',
'17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,467,467,467,467,467,467',
'467,467,467,467,467,,467,467,,,467,467,,17,,,17,17,,17,,,17,,,467,,467',
'17,467,467,467,467,467,467,467,17,467,,,,17,17,17,17,17,17,,,,17,17',
',467,467,,806,,17,,,17,,,17,18,18,18,,18,,,,18,18,,,,18,,18,18,18,18',
'18,18,18,,,,,,18,18,18,18,18,18,18,,,18,806,806,806,806,,,18,,,18,18',
',18,18,18,18,18,,18,18,18,,18,18,,18,18,,821,821,821,821,821,821,821',
'821,821,821,821,,821,821,537,,821,821,,18,,,18,,,18,,,18,,,821,,821',
'18,821,821,821,821,821,821,821,18,821,,,,18,18,18,18,18,18,,,,18,18',
',821,537,537,537,537,18,,,18,,,18,519,519,519,464,519,,,,519,519,,,',
'519,,519,519,519,519,519,519,519,,,,,,519,519,519,519,519,519,519,464',
',519,,464,464,464,464,,519,,,519,519,,519,519,519,519,519,,519,519,519',
',519,519,,519,519,,734,734,734,734,734,734,734,734,734,734,734,,734',
'734,881,,734,734,,519,,,519,,,519,,,519,,,734,,734,519,734,734,734,734',
'734,734,734,519,734,,,,519,519,519,519,519,519,,,,519,519,,734,881,881',
'881,881,519,,,519,,,519,873,873,873,873,873,,,,873,873,,,,873,,873,873',
'873,873,873,873,873,,,,,,873,873,873,873,873,873,873,,551,873,551,551',
'551,,551,873,873,,873,873,873,,873,873,873,873,873,,873,873,873,,873',
'873,,873,873,,741,741,741,741,741,741,741,741,741,741,741,,741,741,',
',741,741,,873,,,873,,,873,,,873,,873,741,,741,873,741,741,741,741,741',
'741,741,873,741,,,,873,873,873,873,873,873,,,,873,873,,741,,,,,873,',
',873,,,873,22,22,22,463,22,,,,22,22,,,,22,,22,22,22,22,22,22,22,,,,',
',22,22,22,22,22,22,22,463,,22,,463,463,463,463,,22,,,22,22,,22,22,22',
'22,22,22,22,22,22,,22,22,,22,22,,736,736,736,736,736,736,736,736,736',
'736,736,,736,736,,,736,736,,22,,,22,,,22,,,22,,22,736,22,736,22,736',
'736,736,736,736,736,736,22,736,,,,22,22,22,22,22,22,,,,22,22,,736,,',
',,22,,,22,,,22,23,23,23,,23,,,,23,23,,,,23,,23,23,23,23,23,23,23,,,',
',,23,23,23,23,23,23,23,,785,23,785,785,785,,785,,23,,,23,23,,23,23,23',
'23,23,23,23,23,23,,23,23,,23,23,,666,666,666,666,666,666,666,666,666',
'666,666,,666,666,,,666,666,,23,,,23,,,23,,,23,,23,666,23,666,23,666',
'666,666,666,666,666,666,23,666,,,,23,23,23,23,23,23,,,,23,23,,666,,',
',,23,,,23,,,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,,,',
',,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24,24,24',
'24,,24,24,,24,24,,430,430,430,430,430,430,430,430,430,430,430,,430,430',
',,430,430,,24,,,24,,,24,,,24,,24,430,24,430,24,430,430,430,430,430,430',
'430,24,430,,,,24,24,24,24,24,24,,,,24,24,,430,,,,,24,,,24,,,24,525,525',
'525,,525,,,,525,525,,,,525,,525,525,525,525,525,525,525,,,,,,525,525',
'525,525,525,525,525,,,525,,,,,,,525,,,525,525,,525,525,525,525,525,525',
'525,525,525,,525,525,,525,525,,729,729,729,729,729,729,729,729,729,729',
'729,,729,729,,,729,729,,525,,,525,,,525,,,525,,525,729,,729,525,729',
'729,729,729,729,729,729,525,729,,,,525,525,525,525,525,525,,,,525,525',
',729,,,,,525,,,525,,,525,528,528,528,,528,,,,528,528,,,,528,,528,528',
'528,528,528,528,528,,,,,,528,528,528,528,528,528,528,,,528,,,,,,,528',
',,528,528,,528,528,528,528,528,528,528,528,528,,528,528,,528,528,,746',
'746,746,746,746,746,746,746,746,746,746,,746,746,,,746,746,,528,,,528',
',,528,,,528,,,746,,746,528,746,746,746,746,746,746,746,528,746,,,,528',
'528,528,528,528,528,,,,528,528,,746,,,,,528,,,528,,,528,533,533,533',
'533,533,,,,533,533,,,,533,,533,533,533,533,533,533,533,,,,,,533,533',
'533,533,533,533,533,,,533,,,,,,533,533,,533,533,533,,533,533,533,533',
'533,,533,533,533,,533,533,,533,533,,518,518,518,518,518,518,518,518',
'518,518,518,,518,518,,,518,518,,533,,,533,,,533,,,533,,533,518,,518',
'533,518,518,518,518,518,518,518,533,518,,,,533,533,533,533,533,533,',
',,533,533,,518,,,,,533,,,533,,,533,534,534,534,534,534,,,,534,534,,',
',534,,534,534,534,534,534,534,534,,,,,,534,534,534,534,534,534,534,',
',534,,,,,,534,534,,534,534,534,,534,534,534,534,534,,534,534,534,,534',
'534,,534,534,,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,534,',
',534,,,534,,,534,,534,19,,19,534,19,19,19,19,19,19,19,534,19,,,,534',
'534,534,534,534,534,,,,534,534,,19,,,,,534,,,534,,,534,30,30,30,30,30',
',,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30',
',,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,,739,739',
'739,739,739,739,739,739,739,739,739,,739,739,,,739,739,,30,,,30,,,30',
',,30,,30,739,,739,30,739,739,739,739,739,739,739,30,739,,,,30,30,30',
'30,30,30,,,,30,30,,739,,,,,30,,,30,,,30,31,31,31,,31,,,,31,31,,,,31',
',31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31',
',31,31,31,31,31,,31,31,31,,31,31,246,246,246,246,246,246,246,246,246',
'246,246,450,246,246,,,246,246,,,,,,31,,,31,450,450,31,,246,31,246,31',
'246,246,246,246,246,246,246,450,246,450,,450,450,450,450,,31,31,31,31',
'31,31,,,246,31,31,,689,,689,689,689,31,689,,31,,,31,32,32,32,,32,,,',
'32,32,,,,32,,32,32,32,32,32,32,32,,,,,689,32,32,32,32,32,32,32,689,334',
'32,334,334,334,,334,,32,,,32,32,,32,32,32,32,32,,32,32,32,,32,32,625',
',625,625,625,452,625,,,,,,334,,,,,,,,334,452,452,32,,,32,,,32,,,32,',
',,452,,625,,452,452,452,452,,,625,625,625,625,,32,32,32,32,32,32,625',
',,32,32,,,,32,,,32,,,32,,,32,540,540,540,,540,,,,540,540,,,,540,,540',
'540,540,540,540,540,540,,,,,,540,540,540,540,540,540,540,,548,540,548',
'548,548,,548,,540,,,540,540,,540,540,540,540,540,,540,540,540,,540,540',
'56,,56,56,56,,56,,,,,,548,,,,,,,,548,,,540,,,540,,,540,,,540,,,,,,56',
'56,,,,,,,56,56,56,56,,540,540,540,540,540,540,,,,540,540,,,,,,,540,',
',540,,,540,554,554,554,554,554,,,,554,554,,,,554,,554,554,554,554,554',
'554,554,,,,,,554,554,554,554,554,554,554,,,554,,,,,,554,554,,554,554',
'554,,554,554,554,554,554,,554,554,554,,554,554,,554,554,,455,,,,,,,',
',,,,,,,,455,455,,554,,,554,,,554,,,554,,554,455,,455,554,455,455,455',
'455,,,455,554,455,,,,554,554,554,554,554,554,,,,554,554,,,,,,,554,,',
'554,,,554,866,866,866,866,866,,,,866,866,,,,866,,866,866,866,866,866',
'866,866,,,,,,866,866,866,866,866,866,866,,,866,,,,,,866,866,,866,866',
'866,,866,866,866,866,866,,866,866,866,,866,866,,866,866,,456,,,,,,,',
',,,,,,,,456,456,,866,,,866,,,866,,,866,,866,456,,456,866,456,456,456',
'456,,,456,866,456,,,,866,866,866,866,866,866,,,,866,866,,,,,,,866,,',
'866,,,866,864,864,864,,864,,,,864,864,,,,864,,864,864,864,864,864,864',
'864,,,,,,864,864,864,864,864,864,864,,,864,,,,,,,864,,,864,864,,864',
'864,864,864,864,,864,864,864,,864,864,,864,864,,454,,,,,,,,,,,,,,,,454',
'454,,864,,,864,,,864,,,864,,864,454,864,454,864,454,454,454,454,,,454',
'864,454,,,,864,864,864,864,864,864,,,,864,864,,,,,,,864,,,864,,,864',
'671,671,671,,671,,,,671,671,,,,671,,671,671,671,671,671,671,671,,,,',
',671,671,671,671,671,671,671,,,671,,,,,,,671,,,671,671,,671,671,671',
'671,671,,671,671,671,,671,671,,671,671,,453,453,453,453,453,453,453',
',,453,453,,,,,,453,453,,671,,,671,,,671,,,671,,671,453,,453,671,453',
'453,453,453,453,453,453,671,453,,,,671,671,671,671,671,671,,,,671,671',
',,,,,,671,,,671,,,671,39,39,39,,39,,,,39,39,,,,39,,39,39,39,39,39,39',
'39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,',
'39,39,39,,39,39,,39,39,,443,443,443,443,443,443,443,443,443,443,443',
',443,443,,,443,443,,39,,,39,,,39,,,39,,,443,,443,39,443,443,443,443',
'443,443,443,39,443,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,,39,,,39',
'40,40,40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40',
'40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40',
',458,458,458,458,458,458,458,,,458,458,,,,,,458,458,,40,,,40,,,40,,',
'40,,,458,,458,40,458,458,458,458,458,458,458,40,458,,,,40,40,40,40,40',
'40,,,,40,40,,,,,,,40,,,40,,,40,849,849,849,849,849,,,,849,849,,,,849',
',849,849,849,849,849,849,849,,,,,,849,849,849,849,849,849,849,,,849',
',,,,,849,849,,849,849,849,,849,849,849,849,849,,849,849,849,,849,849',
',849,849,,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,849,,',
'849,,,849,,,849,,849,459,,459,849,459,459,459,459,459,459,459,849,459',
',,,849,849,849,849,849,849,,,,849,849,,,,,,,849,,,849,,,849,558,558',
'558,558,558,,,,558,558,,,,558,,558,558,558,558,558,558,558,,,,,,558',
'558,558,558,558,558,558,,,558,,,,,,558,558,,558,558,558,,558,558,558',
'558,558,,558,558,558,,558,558,,558,558,,460,460,460,460,460,460,460',
',,460,460,,,,,,460,460,,558,,,558,,,558,,,558,,558,460,,460,558,460',
'460,460,460,460,460,460,558,460,,,,558,558,558,558,558,558,,,,558,558',
',,,,,,558,,,558,,,558,563,563,563,563,563,,,,563,563,,,,563,,563,563',
'563,563,563,563,563,,,,,,563,563,563,563,563,563,563,,,563,,,,,,563',
'563,,563,563,563,,563,563,563,563,563,,563,563,563,,563,563,,563,563',
',462,462,462,462,462,462,462,,,462,462,,,,,,462,462,,563,,,563,,,563',
',,563,,563,462,,462,563,462,462,462,462,462,462,462,563,462,,,,563,563',
'563,563,563,563,,,,563,563,,,,,,,563,,,563,,,563,52,52,52,,52,,,,52',
'52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,',
'52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,,52,52,,465,465,465,465',
'465,465,465,,,465,465,,,,,,465,465,,52,,,52,,,52,,,52,,,465,,465,52',
'465,465,465,465,465,465,465,52,465,,,,52,52,52,52,52,52,,,,52,52,,,',
',,,52,,,52,,,52,53,53,53,,53,,,,53,53,,,,53,,53,53,53,53,53,53,53,,',
',,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53',
'53,53,,53,53,,53,53,,442,442,442,442,442,442,442,442,442,442,442,,442',
'442,,,442,442,,53,,,53,,,53,,,53,,53,442,,442,53,442,442,442,442,442',
'442,442,53,442,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,,,53,54,54',
'54,,54,,,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54',
',,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54,54,,466',
'466,466,466,466,466,466,466,,466,466,,,,,,466,466,,54,,,54,,,54,,,54',
',,466,,466,54,466,466,466,466,466,466,466,54,466,,,,54,54,54,54,54,54',
',,,54,54,,,,,,,54,,,54,,,54,569,569,569,,569,,,,569,569,,,,569,,569',
'569,569,569,569,569,569,,,,,,569,569,569,569,569,569,569,,,569,,,,,',
',569,,,569,569,,569,569,569,569,569,569,569,569,569,,569,569,,569,569',
',461,461,461,461,461,461,461,,,461,461,,,,,,461,461,,569,,,569,,,569',
',,569,,569,461,,461,569,461,461,461,461,461,461,461,569,461,,,,569,569',
'569,569,569,569,,,,569,569,,,,,,,569,,,569,,,569,846,846,846,846,846',
',,,846,846,,,,846,,846,846,846,846,846,846,846,,,,,,846,846,846,846',
'846,846,846,,,846,,,,,,846,846,,846,846,846,,846,846,846,846,846,,846',
'846,846,,846,846,,846,846,,457,,,,,,,,,,,,,,,,457,457,,846,,,846,,,846',
',,846,,846,457,,457,846,457,457,457,457,,,457,846,457,,,,846,846,846',
'846,846,846,,,,846,846,,,,,,,846,,,846,,,846,57,57,57,,57,,,,57,57,',
',,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,',
',57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,451,,,,,,,,,,,,,,,,451',
'451,,57,,,57,,,57,,,57,,,451,,451,57,451,451,451,451,,,,57,,,,,57,57',
'57,57,57,57,,,,57,57,,,,,,,57,,,57,,,57,58,58,58,,58,,,,58,58,,,,58',
',58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58',
',58,58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58',
',,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58',
',,58,,,58,61,61,61,,61,,,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61',
'61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61',
'61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,',
',,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61,62,62,62,,62,,,',
'62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,',
',,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,804,,804,804,804,,804',
',,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62,,,,804,,,,,,,,804,804,804,804',
',62,62,62,62,62,62,,,,62,62,,,,,,,62,,,62,,,62,63,63,63,,63,,,,63,63',
',,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63',
',,63,63,,63,63,63,63,63,,63,63,63,,63,63,714,,714,714,714,,714,,,,,',
',,,,,,,,63,,,63,,,63,,,63,,,63,,,,,,714,,,,,,,,714,714,714,714,,63,63',
'63,63,63,63,,,,63,63,,,,,,,63,,,63,,,63,439,439,439,,439,,,,439,439',
',,,439,,439,439,439,439,439,439,439,,,,,,439,439,439,439,439,439,439',
',,439,,,,,,,439,,,439,439,,439,439,439,439,439,,439,439,439,,439,439',
',439,439,,,,,,,,,,,,,,,,,,,,,439,,,439,,,439,,,439,,,,,,439,,,,,,,,439',
',,,,439,439,439,439,439,439,,,,439,439,,,,,,,439,,,439,,,439,845,845',
'845,,845,,,,845,845,,,,845,,845,845,845,845,845,845,845,,,,,,845,845',
'845,845,845,845,845,,,845,,,,,,,845,,,845,845,,845,845,845,845,845,',
'845,845,845,,845,845,,845,845,,,,,,,,,,,,,,,,,,,,,845,,,845,,,845,,',
'845,,845,,,,845,,,,,,,,845,,,,,845,845,845,845,845,845,,,,845,845,,',
',,,,845,,,845,,,845,438,438,438,,438,,,,438,438,,,,438,,438,438,438',
'438,438,438,438,,,,,,438,438,438,438,438,438,438,,,438,,,,,,,438,,,438',
'438,,438,438,438,438,438,,438,438,438,,438,438,,438,438,,,,,,,,,,,,',
',,,,,,,,438,,,438,,,438,,,438,,,,,,438,,,,,,,,438,,,,,438,438,438,438',
'438,438,,,,438,438,,,,,,,438,,,438,,,438,835,835,835,,835,,,,835,835',
',,,835,,835,835,835,835,835,835,835,,,,,,835,835,835,835,835,835,835',
',,835,,,,,,,835,,,835,835,,835,835,835,835,835,,835,835,835,,835,835',
'860,,860,860,860,,860,,,,,,,,,,,,,,,,,835,,,835,,,835,,,835,,,,,,860',
'860,,,,,,,860,860,860,860,,835,835,835,835,835,835,,,,835,835,,,,,,',
'835,,,835,,,835,437,437,437,,437,,,,437,437,,,,437,,437,437,437,437',
'437,437,437,,,,,,437,437,437,437,437,437,437,,,437,,,,,,,437,,,437,437',
',437,437,437,437,437,,437,437,437,,437,437,,437,437,,,,,,,,,,,,,,,,',
',,,,437,,,437,,,437,,,437,,,,,,437,,,,,,,,437,,,,,437,437,437,437,437',
'437,,,,437,437,,,,,,,437,,,437,,,437,83,83,83,,83,,,,83,83,,,,83,,83',
'83,83,83,83,83,83,,83,,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83',
',83,83,83,83,83,83,83,83,83,,83,83,,83,83,,,,,,,,,,,,,,,,,,,,,83,,,83',
'83,,83,,,83,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,',
',,,,,83,,,83,,,83,86,86,86,,86,,,,86,86,,,,86,,86,86,86,86,86,86,86',
',86,,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,,86,86,86,86,86,86',
'86,86,86,,86,86,,86,86,,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,86,,86,',
'86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,,,86,,,86',
'435,435,435,,435,,,,435,435,,,,435,,435,435,435,435,435,435,435,,,,',
',435,435,435,435,435,435,435,,,435,,,,,,,435,,,435,435,,435,435,435',
'435,435,435,435,435,435,,435,435,,435,435,,,,,,,,,,,,,,,,,,,,,435,,',
'435,,,435,,,435,,435,,,,435,,,,,,,,435,,,,,435,435,435,435,435,435,',
',,435,435,,,,,,,435,,,435,,,435,98,98,98,98,98,,,,98,98,,,,98,,98,98',
'98,98,98,98,98,,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98',
',98,98,98,98,98,,98,98,98,,98,98,,98,98,,,,,,,,,,,,,,,,,,,,,98,,,98',
',,98,,,98,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98,98,,,,,,98',
'98,,,98,,,98,102,102,102,,102,,,,102,102,,,,102,,102,102,102,102,102',
'102,102,,,,,,102,102,102,102,102,102,102,,,102,,,,,,,102,,,102,102,',
'102,102,102,102,102,,102,102,102,,102,102,,102,102,,,,,,,,,,,,,,,,,',
',,,102,,,102,,,102,,,102,,,,,,102,,,,,,,,102,,,,,102,102,102,102,102',
'102,,,,102,102,,,,,,,102,,,102,,,102,103,103,103,,103,,,,103,103,,,',
'103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,,',
'103,,,,,,,103,,,103,103,,103,103,103,103,103,,103,103,103,,103,103,',
'103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,,,,,,103',
',,,,103,103,103,103,103,103,,,,103,103,,,,,,,103,,,103,,,103,104,104',
'104,,104,,,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104',
'104,104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,',
'104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,',
'104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,,',
',104,,,104,,,104,105,105,105,,105,,,,105,105,,,,105,,105,105,105,105',
'105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105',
',105,105,105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,',
',,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105',
'105,,,,105,105,,,,,,,105,,,105,,,105,106,106,106,106,106,,,,106,106',
',,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106',
',,106,,,,,,106,106,,106,106,106,,106,106,106,106,106,,106,106,106,,106',
'106,,106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106,,106,,,,106,',
',,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,,,106,,,106,,,106',
'107,107,107,107,107,,,,107,107,,,,107,,107,107,107,107,107,107,107,',
',,,,107,107,107,107,107,107,107,,,107,,,,,,107,107,107,107,107,107,',
'107,107,107,107,107,,107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,',
',,,107,,,107,,,107,,,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107',
'107,107,,,,107,107,,,,,,,107,,,107,,,107,831,831,831,831,831,,,,831',
'831,,,,831,,831,831,831,831,831,831,831,,,,,,831,831,831,831,831,831',
'831,,,831,,,,,,831,831,,831,831,831,,831,831,831,831,831,,831,831,831',
',831,831,,831,831,,,,,,,,,,,,,,,,,,,,,831,,,831,,,831,,,831,,831,,,',
'831,,,,,,,,831,,,,,831,831,831,831,831,831,,,,831,831,,,,,,,831,,,831',
',,831,428,428,428,,428,,,,428,428,,,,428,,428,428,428,428,428,428,428',
',,,,,428,428,428,428,428,428,428,,,428,,,,,,,428,,,428,428,,428,428',
'428,428,428,428,428,428,428,,428,428,,428,428,,,,,,,,,,,,,,,,,,,,,428',
',,428,428,,428,,,428,,428,,428,,428,,,,,,,,428,,,,,428,428,428,428,428',
'428,,,,428,428,,,,,,,428,,,428,,,428,822,822,822,,822,,,,822,822,,,',
'822,,822,822,822,822,822,822,822,,,,,,822,822,822,822,822,822,822,,',
'822,,,,,,,822,,,822,822,,822,822,822,822,822,,822,822,822,,822,822,',
'822,822,,,,,,,,,,,,,,,,,,,,,822,,,822,,,822,,,822,,,,,,822,,,,,,,,822',
',,,,822,822,822,822,822,822,,,,822,822,,,,,,,822,,,822,,,822,194,194',
'194,194,194,,,,194,194,,,,194,,194,194,194,194,194,194,194,,,,,,194',
'194,194,194,194,194,194,,,194,,,,,,194,194,,194,194,194,,194,194,194',
'194,194,,194,194,194,,194,194,,194,194,,,,,,,,,,,,,,,,,,,,,194,,,194',
',,194,,,194,,194,,,,194,,,,,,,,194,,,,,194,194,194,194,194,194,,,,194',
'194,,,,,,,194,,,194,,,194,195,195,195,,195,,,,195,195,,,,195,,195,195',
'195,195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,,195',
',,195,195,,195,195,195,195,195,,195,195,195,,195,195,,195,195,,,,,,',
',,,,,,,,,,,,,,195,,,195,,,195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195',
'195,195,195,195,,,,195,195,,,,,,,195,,,195,,,195,196,196,196,,196,,',
',196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196',
'196,196,,,196,,,,,,,196,,,196,196,,196,196,196,196,196,,196,196,196',
',196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,196,,196,,,',
'196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,,,,,,196,,,196',
',,196,197,197,197,,197,,,,197,197,,,,197,,197,197,197,197,197,197,197',
',,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,,197,197',
'197,197,197,,197,197,197,,197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197,',
',197,,,197,,,197,,,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,',
'197,197,,,,,,,197,,,197,,,197,198,198,198,,198,,,,198,198,,,,198,,198',
'198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,',
',198,,,198,198,,198,198,198,198,198,198,198,198,198,,198,198,,198,198',
',,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,198,,,,198,,,,,,,,198,,,',
',198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198,,,198,427,427,427',
',427,,,,427,427,,,,427,,427,427,427,427,427,427,427,,,,,,427,427,427',
'427,427,427,427,,,427,,,,,,,427,,,427,427,,427,427,427,427,427,427,427',
'427,427,,427,427,,427,427,,,,,,,,,,,,,,,,,,,,,427,,,427,427,,427,,,427',
',427,,427,,427,,,,,,,,427,,,,,427,427,427,427,427,427,,,,427,427,,,',
',,,427,,,427,,,427,201,201,201,,201,,,,201,201,,,,201,,201,201,201,201',
'201,201,201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201',
',201,201,201,201,201,,201,201,201,,201,201,,201,201,,,,,,,,,,,,,,,,',
',,,,201,,,201,,,201,,,201,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201',
'201,,,,201,201,,,,,,,201,,,201,,,201,202,202,202,,202,,,,202,202,,,',
'202,,202,202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,',
'202,,,,,,,202,,,202,202,,202,202,202,202,202,,202,202,202,,202,202,',
'202,202,,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,202,,,,,,202,,,,,,,,202',
',,,,202,202,202,202,202,202,,,,202,202,,,,,,,202,,,202,,,202,203,203',
'203,,203,,,,203,203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203',
'203,203,203,203,203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203,',
'203,203,203,,203,203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,',
'203,,,,,,203,,,,,,,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,,',
',203,,,203,,,203,573,573,573,,573,,,,573,573,,,,573,,573,573,573,573',
'573,573,573,,,,,,573,573,573,573,573,573,573,,,573,,,,,,,573,,,573,573',
',573,573,573,573,573,,573,573,573,,573,573,,573,573,,,,,,,,,,,,,,,,',
',,,,573,,,573,,,573,,,573,,,,,,573,,,,,,,,573,,,,,573,573,573,573,573',
'573,,,,573,573,,,,,,,573,,,573,,,573,810,810,810,,810,,,,810,810,,,',
'810,,810,810,810,810,810,810,810,,,,,,810,810,810,810,810,810,810,,',
'810,,,,,,,810,,,810,810,,810,810,810,810,810,,810,810,810,,810,810,',
'810,810,,,,,,,,,,,,,,,,,,,,,810,,,810,,,810,,,810,,,,,,810,,,,,,,,810',
',,,,810,810,810,810,810,810,,,,810,810,,,,,,,810,,,810,,,810,575,575',
'575,,575,,,,575,575,,,,575,,575,575,575,575,575,575,575,,,,,,575,575',
'575,575,575,575,575,,,575,,,,,,,575,,,575,575,,575,575,575,575,575,',
'575,575,575,,575,575,,575,575,,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,,',
'575,,,,,,575,,,,,,,,575,,,,,575,575,575,575,575,575,,,,575,575,,,,,',
',575,,,575,,,575,602,602,602,,602,,,,602,602,,,,602,,602,602,602,602',
'602,602,602,,,,,,602,602,602,602,602,602,602,,,602,,,,,,,602,,,602,602',
',602,602,602,602,602,,602,602,602,,602,602,,602,602,,,,,,,,,,,,,,,,',
',,,,602,,,602,,,602,,,602,,,,,,602,,,,,,,,602,,,,,602,602,602,602,602',
'602,,,,602,602,,,,,,,602,,,602,,,602,791,791,791,791,791,,,,791,791',
',,,791,,791,791,791,791,791,791,791,,,,,,791,791,791,791,791,791,791',
',,791,,,,,,791,791,,791,791,791,,791,791,791,791,791,,791,791,791,,791',
'791,,791,791,,,,,,,,,,,,,,,,,,,,,791,,,791,,,791,,,791,,791,,,,791,',
',,,,,,791,,,,,791,791,791,791,791,791,,,,791,791,,,,,,,791,,,791,,,791',
'211,211,211,211,211,,,,211,211,,,,211,,211,211,211,211,211,211,211,',
',,,,211,211,211,211,211,211,211,,,211,,,,,,211,211,,211,211,211,,211',
'211,211,211,211,,211,211,211,,211,211,,211,211,,,,,,,,,,,,,,,,,,,,,211',
',,211,,,211,,,211,,211,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211',
',,,211,211,,,,,,,211,,,211,,,211,212,212,212,,212,,,,212,212,,,,212',
',212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212,212,,,212',
',,,,,,212,,,212,212,,212,212,212,212,212,,212,212,212,,212,212,,212',
'212,,,,,,,,,,,,,,,,,,,,,212,,,212,,212,212,,,212,,,,,,212,,,,,,,,212',
',,,,212,212,212,212,212,212,,,,212,212,,,,,,,212,,,212,,,212,215,215',
'215,,215,,,,215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215',
'215,215,215,215,215,,,215,,,,,,,215,,,215,215,,215,215,215,215,215,',
'215,215,215,,215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,',
'215,,,,,,215,,,,,,,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,,',
',215,,,215,,,215,790,790,790,790,790,,,,790,790,,,,790,,790,790,790',
'790,790,790,790,,,,,,790,790,790,790,790,790,790,,,790,,,,,,790,790',
',790,790,790,,790,790,790,790,790,,790,790,790,,790,790,,790,790,,,',
',,,,,,,,,,,,,,,,,790,,,790,,,790,,,790,,790,,,,790,,,,,,,,790,,,,,790',
'790,790,790,790,790,,,,790,790,,,,,,,790,,,790,,,790,217,217,217,,217',
',,,217,217,,,,217,,217,217,217,217,217,217,217,,,,,,217,217,217,217',
'217,217,217,,,217,,,,,,,217,,,217,217,,217,217,217,217,217,,217,217',
'217,,217,217,,217,217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,217,,,,',
',217,,,,,,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,,,,,217,,,217',
',,217,218,218,218,,218,,,,218,218,,,,218,,218,218,218,218,218,218,218',
',,,,,218,218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218',
'218,218,218,,218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,',
',218,,,218,,,218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,',
'218,218,,,,,,,218,,,218,,,218,219,219,219,,219,,,,219,219,,,,219,,219',
'219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,',
',219,,,219,219,,219,219,219,219,219,,219,219,219,,219,219,,219,219,',
',,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219,,,,,219',
'219,219,219,219,219,,,,219,219,,,,,,,219,,,219,,,219,220,220,220,,220',
',,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220,220,220',
'220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220',
'220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220,,,,',
',220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220',
',,220,221,221,221,,221,,,,221,221,,,,221,,221,221,221,221,221,221,221',
',,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221',
'221,221,221,,221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221,',
',221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,',
'221,221,,,,,,,221,,,221,,,221,222,222,222,,222,,,,222,222,,,,222,,222',
'222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,',
',222,,,222,222,,222,222,222,222,222,,222,222,222,,222,222,,222,222,',
',,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222',
'222,222,222,222,222,,,,222,222,,,,,,,222,,,222,,,222,223,223,223,,223',
',,,223,223,,,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223',
'223,223,223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223',
'223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,',
',223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223',
',,223,224,224,224,,224,,,,224,224,,,,224,,224,224,224,224,224,224,224',
',,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224',
'224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,',
',224,,,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,',
'224,224,,,,,,,224,,,224,,,224,225,225,225,,225,,,,225,225,,,,225,,225',
'225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,',
',225,,,225,225,,225,225,225,225,225,,225,225,225,,225,225,,225,225,',
',,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225',
'225,225,225,225,225,,,,225,225,,,,,,,225,,,225,,,225,226,226,226,,226',
',,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226',
'226,226,226,,,226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226',
'226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,',
',226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226,,,226',
',,226,227,227,227,,227,,,,227,227,,,,227,,227,227,227,227,227,227,227',
',,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227',
'227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,',
',227,,,227,,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,,,227,228,228,228,,228,,,,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,,228,228,228,228,228,,228,228,228,,228,228,,228,228,',
',,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228',
'228,228,228,228,228,,,,228,228,,,,,,,228,,,228,,,228,229,229,229,,229',
',,,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229',
'229,229,229,,,229,,,,,,,229,,,229,229,,229,229,229,229,229,,229,229',
'229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,',
',229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229',
',,229,230,230,230,,230,,,,230,230,,,,230,,230,230,230,230,230,230,230',
',,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230',
'230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,',
',230,,,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,',
'230,230,,,,,,,230,,,230,,,230,231,231,231,,231,,,,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,,231,231,231,231,231,,231,231,231,,231,231,,231,231,',
',,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231',
'231,231,231,231,231,,,,231,231,,,,,,,231,,,231,,,231,232,232,232,,232',
',,,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232',
'232,232,232,,,232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232',
'232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,',
',232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232',
',,232,233,233,233,,233,,,,233,233,,,,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233',
'233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,',
',233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,',
'233,233,,,,,,,233,,,233,,,233,234,234,234,,234,,,,234,234,,,,234,,234',
'234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,',
',234,,,234,234,,234,234,234,234,234,,234,234,234,,234,234,,234,234,',
',,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234',
'234,234,234,234,234,,,,234,234,,,,,,,234,,,234,,,234,235,235,235,,235',
',,,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235',
'235,235,235,,,235,,,,,,,235,,,235,235,,235,235,235,235,235,,235,235',
'235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,',
',235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,,,,235,,,235',
',,235,236,236,236,,236,,,,236,236,,,,236,,236,236,236,236,236,236,236',
',,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236',
'236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,',
',236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,',
'236,236,,,,,,,236,,,236,,,236,237,237,237,,237,,,,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,,237,237,237,237,237,,237,237,237,,237,237,,237,237,',
',,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237',
'237,237,237,237,237,,,,237,237,,,,,,,237,,,237,,,237,238,238,238,,238',
',,,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238',
'238,238,238,,,238,,,,,,,238,,,238,238,,238,238,238,238,238,,238,238',
'238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,',
',238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238',
',,238,239,239,239,,239,,,,239,239,,,,239,,239,239,239,239,239,239,239',
',,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239',
'239,239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,',
',239,,,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,',
'239,239,,,,,,,239,,,239,,,239,240,240,240,,240,,,,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,,240,240,240,240,240,,240,240,240,,240,240,,240,240,',
',,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240',
'240,240,240,240,240,,,,240,240,,,,,,,240,,,240,,,240,241,241,241,,241',
',,,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241',
'241,241,241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241',
'241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,',
',241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241',
',,241,242,242,242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242',
'242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,',
',242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,',
'242,242,,,,,,,242,,,242,,,242,604,604,604,,604,,,,604,604,,,,604,,604',
'604,604,604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,',
',604,,,604,604,,604,604,604,604,604,,604,604,604,,604,604,,604,604,',
',,,,,,,,,,,,,,,,,,,604,,,604,,,604,,,604,,604,,,,604,,,,,,,,604,,,,',
'604,604,604,604,604,604,,,,604,604,,,,,,,604,,,604,,,604,788,788,788',
',788,,,,788,788,,,,788,,788,788,788,788,788,788,788,,,,,,788,788,788',
'788,788,788,788,,,788,,,,,,,788,,,788,788,,788,788,788,788,788,,788',
'788,788,,788,788,,788,788,,,,,,,,,,,,,,,,,,,,,788,,,788,,,788,,,788',
',,,,,788,,,,,,,,788,,,,,788,788,788,788,788,788,,,,788,788,,,,,,,788',
',,788,,,788,409,409,409,,409,,,,409,409,,,,409,,409,409,409,409,409',
'409,409,,,,,,409,409,409,409,409,409,409,,,409,,,,,,,409,,,409,409,',
'409,409,409,409,409,,409,409,409,,409,409,,409,409,,,,,,,,,,,,,,,,,',
',,,409,,,409,,,409,,,409,,,,,,409,,,,,,,,409,,,,,409,409,409,409,409',
'409,,,,409,409,,,,,,,409,,,409,,,409,251,251,251,,251,,,,251,251,,,',
'251,,251,251,251,251,251,251,251,,,,,,251,251,251,251,251,251,251,,',
'251,,,,,,,251,,,251,251,,251,251,251,251,251,,251,251,251,,251,251,',
'251,251,,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,,,251,,,,,,251,,,,,,,,251',
',,,,251,251,251,251,251,251,,,,251,251,,,,,,,251,,,251,,,251,769,769',
'769,769,769,,,,769,769,,,,769,,769,769,769,769,769,769,769,,,,,,769',
'769,769,769,769,769,769,,,769,,,,,,769,769,,769,769,769,,769,769,769',
'769,769,,769,769,769,,769,769,,769,769,,,,,,,,,,,,,,,,,,,,,769,,,769',
',,769,,,769,,769,,,,769,,,,,,,,769,,,,,769,769,769,769,769,769,,,,769',
'769,,,,,,,769,,,769,,,769,253,253,253,,253,,,,253,253,,,,253,,253,253',
'253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253',
',,253,253,,253,253,253,253,253,,253,253,253,,253,253,,253,253,,,,,,',
',,,,,,,,,,,,,,253,,,253,,,253,,,253,,,,,,253,,,,,,,,253,,,,,253,253',
'253,253,253,253,,,,253,253,,,,,,,253,,,253,,,253,258,258,258,,258,,',
',258,258,,,,258,,258,258,258,258,258,258,258,,,,,,258,258,258,258,258',
'258,258,,,258,,,,,,,258,,,258,258,,258,258,258,258,258,,258,258,258',
',258,258,,258,258,,,,,,,,,,,,,,,,,,,,,258,,,258,,,258,,,258,,,,,,258',
',,,,,,,258,,,,,258,258,258,258,258,258,,,,258,258,,,,,,,258,,,258,,',
'258,606,606,606,,606,,,,606,606,,,,606,,606,606,606,606,606,606,606',
',,,,,606,606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,,606,606',
'606,606,606,,606,606,606,,606,606,,606,606,,,,,,,,,,,,,,,,,,,,,606,',
',606,,,606,,,606,,,,,,606,,,,,,,,606,,,,,606,606,606,606,606,606,,,',
'606,606,,,,,,,606,,,606,,,606,607,607,607,,607,,,,607,607,,,,607,,607',
'607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607,,,607,,,,,',
',607,,,607,607,,607,607,607,607,607,,607,607,607,,607,607,,607,607,',
',,,,,,,,,,,,,,,,,,,607,,,607,,,607,,,607,,,,,,607,,,,,,,,607,,,,,607',
'607,607,607,607,607,,,,607,607,,,,,,,607,,,607,,,607,612,612,612,,612',
',,,612,612,,,,612,,612,612,612,612,612,612,612,,,,,,612,612,612,612',
'612,612,612,,,612,,,,,,,612,,,612,612,,612,612,612,612,612,,612,612',
'612,,612,612,,612,612,,,,,,,,,,,,,,,,,,,,,612,,,612,,,612,,,612,,,,',
',612,,,,,,,,612,,,,,612,612,612,612,612,612,,,,612,612,,,,,,,612,,,612',
',,612,264,264,264,,264,,,,264,264,,,,264,,264,264,264,264,264,264,264',
',,,,,264,264,264,264,264,264,264,,,264,,,,,,,264,,,264,264,,264,264',
'264,264,264,264,264,264,264,,264,264,,264,264,,,,,,,,,,,,,,,,,,,,,264',
',,264,,,264,,,264,,264,,264,,264,,,,,,,,264,,,,,264,264,264,264,264',
'264,,,,264,264,,,,,,,264,,,264,,,264,265,265,265,,265,,,,265,265,,,',
'265,,265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,',
'265,,,,,,,265,,,265,265,,265,265,265,265,265,265,265,265,265,,265,265',
',265,265,,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,,265,,265,,265,,265,,',
',,,,,265,,,,,265,265,265,265,265,265,,,,265,265,,,,,,,265,,,265,,,265',
'273,273,273,,273,,,,273,273,,,,273,,273,273,273,273,273,273,273,,,,',
',273,273,273,273,273,273,273,,,273,,,,,,,273,,,273,273,,273,273,273',
'273,273,273,273,273,273,,273,273,,273,273,,,,,,,,,,,,,,,,,,,,,273,,',
'273,,273,273,,,273,,273,,273,,273,,,,,,,,273,,,,,273,273,273,273,273',
'273,,,,273,273,,,,,,,273,,,273,,,273,759,759,759,,759,,,,759,759,,,',
'759,,759,759,759,759,759,759,759,,,,,,759,759,759,759,759,759,759,,',
'759,,,,,,,759,,,759,759,,759,759,759,759,759,,759,759,759,,759,759,',
'759,759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,,759,,759,,,,759,,,,,,',
',759,,,,,759,759,759,759,759,759,,,,759,759,,,,,,,759,,,759,,,759,615',
'615,615,,615,,,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615',
'615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,,615,615,615,615,615',
',615,615,615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,',
',615,,,,,,615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,,,,',
',,615,,,615,,,615,744,744,744,,744,,,,744,744,,,,744,,744,744,744,744',
'744,744,744,,,,,,744,744,744,744,744,744,744,,,744,,,,,,,744,,,744,744',
',744,744,744,744,744,,744,744,744,,744,744,,744,744,,,,,,,,,,,,,,,,',
',,,,744,,,744,,,744,,,744,,,,,,744,,,,,,,,744,,,,,744,744,744,744,744',
'744,,,,744,744,,,,,,,744,,,744,,,744,277,277,277,277,277,,,,277,277',
',,,277,,277,277,277,277,277,277,277,,,,,,277,277,277,277,277,277,277',
',,277,,,,,,277,277,,277,277,277,,277,277,277,277,277,,277,277,277,,277',
'277,,277,277,,,,,,,,,,,,,,,,,,,,,277,,,277,,,277,,,277,,277,,,,277,',
',,,,,,277,,,,,277,277,277,277,277,277,,,,277,277,,,,,,,277,,,277,,,277',
'743,743,743,,743,,,,743,743,,,,743,,743,743,743,743,743,743,743,,,,',
',743,743,743,743,743,743,743,,,743,,,,,,,743,,,743,743,,743,743,743',
'743,743,,743,743,743,,743,743,,743,743,,,,,,,,,,,,,,,,,,,,,743,,,743',
',,743,,,743,,,,,,743,,,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743',
',,,,,,743,,,743,,,743,742,742,742,,742,,,,742,742,,,,742,,742,742,742',
'742,742,742,742,,,,,,742,742,742,742,742,742,742,,,742,,,,,,,742,,,742',
'742,,742,742,742,742,742,,742,742,742,,742,742,,742,742,,,,,,,,,,,,',
',,,,,,,,742,,,742,,,742,,,742,,,,,,742,,,,,,,,742,,,,,742,742,742,742',
'742,742,,,,742,742,,,,,,,742,,,742,,,742,371,371,371,,371,,,,371,371',
',,,371,,371,371,371,371,371,371,371,,,,,,371,371,371,371,371,371,371',
',,371,,,,,,,371,,,371,371,,371,371,371,371,371,,371,371,371,,371,371',
',371,371,,,,,,,,,,,,,,,,,,,,,371,,,371,,,371,,,371,,,,,,371,,,,,,,,371',
',,,,371,371,371,371,371,371,,,,371,371,,,,,,,371,,,371,,,371,281,281',
'281,,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281',
'281,281,281,281,281,,,281,,,,,,,281,,,281,281,,281,281,281,281,281,',
'281,281,281,,281,281,318,,318,318,318,,318,,,,,,,,,,,,,,,,,281,,,281',
',,281,,,281,,,,,,318,,318,,,,,,318,318,318,318,,281,281,281,281,281',
'281,,,,281,281,,,,281,,,281,,,281,,,281,282,282,282,282,282,,,,282,282',
',,,282,,282,282,282,282,282,282,282,,,,,,282,282,282,282,282,282,282',
',,282,,,,,,282,282,,282,282,282,,282,282,282,282,282,,282,282,282,,282',
'282,,282,282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,,282,,282,,,,282,',
',,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,,,,,,,282,,,282,,,282',
'623,623,623,,623,,,,623,623,,,,623,,623,623,623,623,623,623,623,,,,',
',623,623,623,623,623,623,623,,,623,,,,,,,623,,,623,623,,623,623,623',
'623,623,,623,623,623,,623,623,,623,623,,,,,,,,,,,,,,,,,,,,,623,,,623',
',,623,,,623,,,,,,623,,,,,,,,623,,,,,623,623,623,623,623,623,,,,623,623',
',,,,,,623,,,623,,,623,627,627,627,627,627,,,,627,627,,,,627,,627,627',
'627,627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,627',
'627,,627,627,627,,627,627,627,627,627,,627,627,627,,627,627,,627,627',
',,,,,,,,,,,,,,,,,,,,627,,,627,,,627,,,627,,627,,,,627,,,,,,,,627,,,',
',627,627,627,627,627,627,,,,627,627,,,,,,,627,,,627,,,627,631,631,631',
',631,,,,631,631,,,,631,,631,631,631,631,631,631,631,,,,,,631,631,631',
'631,631,631,631,,,631,,,,,,,631,,,631,631,,631,631,631,631,631,,631',
'631,631,,631,631,,631,631,,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,,,631',
',,,,,631,,,,,,,,631,,,,,631,631,631,631,631,631,,,,631,631,,,,,,,631',
',,631,,,631,638,638,638,638,638,,,,638,638,,,,638,,638,638,638,638,638',
'638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,,638,638,,638,638',
'638,,638,638,638,638,638,,638,638,638,,638,638,,638,638,,,,,,,,,,,,',
',,,,,,,,638,,,638,,,638,,,638,,638,,,,638,,,,,,,,638,,,,,638,638,638',
'638,638,638,,,,638,638,,,,,,,638,,,638,,,638,359,359,359,,359,,,,359',
'359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359,359',
'359,,,359,,,,,,,359,,,359,359,,359,359,359,359,359,,359,359,359,,359',
'359,541,,541,541,541,,541,,,,,,,,,,,,,,,,,359,,,359,,,359,,,359,,,,',
',541,,,,,,,,541,541,541,541,,359,359,359,359,359,359,,,,359,359,,,,',
',,359,,,359,,,359,732,732,732,,732,,,,732,732,,,,732,,732,732,732,732',
'732,732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,,732,,,732,732',
',732,732,732,732,732,,732,732,732,,732,732,,732,732,,,,,,,,,,,,,,,,',
',,,,732,,,732,,,732,,,732,,,,,,732,,,,,,,,732,,,,,732,732,732,732,732',
'732,,,,732,732,,,,,,,732,,,732,,,732,731,731,731,,731,,,,731,731,,,',
'731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,',
'731,,,,,,,731,,,731,731,,731,731,731,731,731,,731,731,731,,731,731,',
'731,731,,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,731,,,,,,731,,,,,,,,731',
',,,,731,731,731,731,731,731,,,,731,731,,,,,,,731,,,731,,,731,294,294',
'294,,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294',
'294,294,294,294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294,',
'294,294,294,,294,294,577,,577,577,577,,577,,,,,,,,,,,,,,,,,294,,,294',
',,294,,,294,,,,,,577,577,,,,,,,577,577,577,577,,294,294,294,294,294',
'294,,,,294,294,,,,,,,294,,,294,,,294,644,644,644,,644,,,,644,644,,,',
'644,,644,644,644,644,644,644,644,,,,,,644,644,644,644,644,644,644,,',
'644,,,,,,,644,,,644,644,,644,644,644,644,644,644,644,644,644,,644,644',
',644,644,,,,,,,,,,,,,,,,,,,,,644,,,644,,,644,,,644,,644,,644,,644,,',
',,,,,644,,,,,644,644,644,644,644,644,,,,644,644,,,,,,,644,,,644,,,644',
'725,725,725,725,725,,,,725,725,,,,725,,725,725,725,725,725,725,725,',
',,,,725,725,725,725,725,725,725,,,725,,,,,,725,725,,725,725,725,,725',
'725,725,725,725,,725,725,725,,725,725,,725,725,,,,,,,,,,,,,,,,,,,,,725',
',,725,,,725,,,725,,725,,,,725,,,,,,,,725,,,,,725,725,725,725,725,725',
',,,725,725,,,,,,,725,,,725,,,725,650,650,650,650,650,,,,650,650,,,,650',
',650,650,650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650',
',,,,,650,650,,650,650,650,,650,650,650,650,650,,650,650,650,,650,650',
',650,650,,,,,,,,,,,,,,,,,,,,,650,,,650,,,650,,,650,,650,,,,650,,,,,',
',,650,,,,,650,650,650,650,650,650,,,,650,650,,,,,,,650,,,650,,,650,651',
'651,651,651,651,,,,651,651,,,,651,,651,651,651,651,651,651,651,,,,,',
'651,651,651,651,651,651,651,,,651,,,,,,651,651,,651,651,651,,651,651',
'651,651,651,,651,651,651,,651,651,,651,651,,,,,,,,,,,,,,,,,,,,,651,',
',651,,,651,,,651,,651,,,,651,,,,,,,,651,,,,,651,651,651,651,651,651',
',,,651,651,,,,,,,651,,,651,,,651,713,713,713,713,713,,,,713,713,,,,713',
',713,713,713,713,713,713,713,,,,,,713,713,713,713,713,713,713,,,713',
',,,,,713,713,,713,713,713,,713,713,713,713,713,,713,713,713,,713,713',
',713,713,,,,,,,,,,,,,,,,,,,,,713,,,713,,,713,,,713,,713,,,,713,,,,,',
',,713,,,,,713,713,713,713,713,713,,,,713,713,,,,,,,713,,,713,,,713,303',
'303,303,,303,,,,303,303,,,,303,,303,303,303,303,303,303,303,,,,,,303',
'303,303,303,303,303,303,,,303,,,,,,,303,,,303,303,,303,303,303,303,303',
',303,303,303,,303,303,,303,303,,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303',
',,303,,,,,,303,,,,,,,,303,,,,,303,303,303,303,303,303,,,,303,303,,,',
',,,303,,,303,,,303,305,305,305,305,305,,,,305,305,,,,305,,305,305,305',
'305,305,305,305,,,,,,305,305,305,305,305,305,305,,,305,,,,,,305,305',
',305,305,305,,305,305,305,305,305,,305,305,305,,305,305,,305,305,,,',
',,,,,,,,,,,,,,,,,305,,,305,,,305,,,305,,305,,,,305,,,,,,,,305,,,,,305',
'305,305,305,305,305,,,,305,305,,,,,,,305,,,305,,,305,346,346,346,,346',
',,,346,346,,,,346,,346,346,346,346,346,346,346,,,,,,346,346,346,346',
'346,346,346,,,346,,,,,,,346,,,346,346,,346,346,346,346,346,,346,346',
'346,,346,346,,346,346,,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,346,,,,',
',346,,,,,,,,346,,,,,346,346,346,346,346,346,,,,346,346,,,,,,,346,,,346',
',,346,712,712,712,712,712,,,,712,712,,,,712,,712,712,712,712,712,712',
'712,,,,,,712,712,712,712,712,712,712,,,712,,,,,,712,712,,712,712,712',
',712,712,712,712,712,,712,712,712,,712,712,,712,712,,,,,,,,,,,,,,,,',
',,,,712,,,712,,,712,,,712,,712,,,,712,,,,,,,,712,,,,,712,712,712,712',
'712,712,,,,712,712,,,,,,,712,,,712,,,712,345,345,345,,345,,,,345,345',
',,,345,,345,345,345,345,345,345,345,,,,,,345,345,345,345,345,345,345',
',,345,,,,,,,345,,,345,345,,345,345,345,345,345,,345,345,345,,345,345',
',345,345,,,,,,,,,,,,,,,,,,,,,345,,,345,,,345,,,345,,,,,,345,,,,,,,,345',
',,,,345,345,345,345,345,345,,,,345,345,,,,,,,345,,,345,,,345,708,708',
'708,708,708,,,,708,708,,,,708,,708,708,708,708,708,708,708,,,,,,708',
'708,708,708,708,708,708,,,708,,,,,,708,708,,708,708,708,,708,708,708',
'708,708,,708,708,708,,708,708,,708,708,,,,,,,,,,,,,,,,,,,,,708,,,708',
',,708,,,708,,708,,,,708,,,,,,,,708,,,,,708,708,708,708,708,708,,,,708',
'708,,,,,,,708,,,708,,,708,655,655,655,,655,,,,655,655,,,,655,,655,655',
'655,655,655,655,655,,,,,,655,655,655,655,655,655,655,,,655,,,,,,,655',
',,655,655,,655,655,655,655,655,,655,655,655,,655,655,,,,,,,,,,,,,,,',
',,,,,,,,655,,,655,,,655,,,655,,,,,,,,,,,,,,,,,,,655,655,655,655,655',
'655,,,,655,655,,,,,,,655,,,655,,,655,703,703,703,,703,,,,703,703,,,',
'703,,703,703,703,703,703,703,703,,,,,,703,703,703,703,703,703,703,,',
'703,,,,,,,703,,,703,703,,703,703,703,703,703,,703,703,703,,703,703,',
'703,703,,,,,,,,,,,,,,,,,,,,,703,,,703,,,703,,,703,,,,,,703,,,,,,,,703',
',,,,703,703,703,703,703,703,,,,703,703,,,,,,,703,,,703,,,703,702,702',
'702,,702,,,,702,702,,,,702,,702,702,702,702,702,702,702,,,,,,702,702',
'702,702,702,702,702,,,702,,,,,,,702,,,702,702,,702,702,702,702,702,',
'702,702,702,,702,702,,702,702,,,,,,,,,,,,,,,,,,,,,702,,,702,,,702,,',
'702,,702,,,,702,,,,,,,,702,,,,,702,702,702,702,702,702,,,,702,702,,',
',,,,702,,,702,,,702,665,665,665,,665,,,,665,665,,,,665,,665,665,665',
'665,665,665,665,,,,,,665,665,665,665,665,665,665,,,665,,,,,,,665,,,665',
'665,,665,665,665,665,665,,665,665,665,,665,665,,,,,,,,,,,,,,,,,,,,,',
',,665,,,665,,,665,,,665,,,,,,,,,,,,,,,,,,,665,665,665,665,665,665,,',
',665,665,,,,,,,665,,,665,,,665,38,38,38,,38,,,,38,38,,,,38,,38,38,38',
'38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38',
'38,38,,38,38,38,,38,38,,38,38,,,,,,,,,,,,,,,,,,,,,38,,,38,,,38,,,38',
',,,,,38,,,,,,,,38,,,,,38,38,38,38,38,38,,,,38,38,,,,,,,38,,,38,,,38',
'399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399',
'399,399,399,399,399,399,399,,,,399,399,399,399,399,399,399,399,399,399',
'399,399,399,399,399,399,399,399,399,399,399,,399,399,,,399,,,,,,,,,399',
'399,,399,399,399,399,399,399,399,,,399,399,,,,399,399,399,399,,,,,,',
',,,,,,399,399,,399,399,399,399,399,399,399,399,399,399,399,,,399,399',
',,,,,,,,,399,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8',
'8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8',
',,,,,,,,,8,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,,,,403,403,403,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,403,403,,403,403,,,403,',
',,,,,,,403,403,,403,403,403,403,403,403,403,,,403,403,,,,403,403,403',
'403,,,,,,,,,,,,,403,403,,403,403,403,403,403,403,403,403,403,403,403',
',,403,403,,,,,,,,,,403,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7',
',7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7',
'7,,,7,7,,,,,,,,,,7,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79,79',
'79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79',
'79,79,79,,,79,722,722,722,722,722,722,722,722,722,722,722,722,722,722',
'722,722,722,722,722,722,722,722,722,722,,,,722,722,722,722,722,722,722',
'722,722,722,722,722,722,722,722,722,722,722,722,722,722,,722,722,,,722',
',,,,,,,,722,722,,722,722,722,722,722,722,722,,,722,722,,,,722,722,722',
'722,,,,,,,,,,,,,722,722,,722,722,722,722,722,722,722,722,722,722,722',
',,722,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,,,,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,,191,191,191,191,191',
',191,,,,,,,191,191,,191,191,191,191,191,191,191,,,191,191,,,,191,191',
'191,191,,,,,,,,,,,,,191,191,,191,191,191,191,191,191,191,191,191,191',
'191,,,191,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65',
'65,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65',
'65,506,506,65,,506,,,,,,,,,506,506,,506,506,506,506,506,506,506,,,506',
'506,,,,506,506,506,506,,,,,,,,,,,,,506,506,,506,506,506,506,506,506',
'506,506,506,506,506,517,517,506,,517,,,,,,,,,517,517,,517,517,517,517',
'517,517,517,,,517,517,,,,517,517,517,517,,,,,,,,,,,,,517,517,,517,517',
'517,517,517,517,517,517,517,517,517,643,643,517,,643,,,,,,,,,643,643',
',643,643,643,643,643,643,643,,,643,643,,,,643,643,643,643,,,,,,,,,,',
',,643,643,,643,643,643,643,643,643,643,643,643,643,643,261,261,643,',
'261,,,,,,,,,261,261,,261,261,261,261,261,261,261,,,261,261,,,,261,261',
'261,261,,,,,,,,,,,,,261,261,,261,261,261,261,261,261,261,261,261,261',
'261,778,778,261,,778,,,,,,,,,778,778,,778,778,778,778,778,778,778,,',
'778,778,,,,778,778,778,778,,,,,,,,,,,,,778,778,,778,778,778,778,778',
'778,778,778,778,778,778,642,642,778,,642,,,,,,,,,642,642,,642,642,642',
'642,642,642,642,,,642,642,,,,642,642,642,642,,,,,,,,,,,,,642,642,,642',
'642,642,642,642,642,642,642,642,642,642,516,516,642,,516,,,,,,,,,516',
'516,,516,516,516,516,516,516,516,,,516,516,,,,516,516,516,516,,,,,,516',
',,,,,,516,516,,516,516,516,516,516,516,516,516,516,516,516,262,262,516',
',262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262,,,,262,262',
'262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262,262,262',
'262,568,568,262,,568,,,,,,,,,568,568,,568,568,568,568,568,568,568,,',
'568,568,,,,568,568,568,568,,,,,,,,,,,,,568,568,,568,568,568,568,568',
'568,568,568,568,568,568,505,505,568,,505,,,,,,,,,505,505,,505,505,505',
'505,505,505,505,,,505,505,,,,505,505,505,505,,,,,,505,,,,,,,505,505',
',505,505,505,505,505,505,505,505,505,505,505,888,888,505,,888,,,,,,',
',,888,888,,888,888,888,888,888,888,888,,,888,888,,,,888,888,888,888',
',,,,,888,,,,,,,888,888,,888,888,888,888,888,888,888,888,888,888,888',
'889,889,888,,889,,,,,,,,,889,889,,889,889,889,889,889,889,889,,,889',
'889,,,,889,889,889,889,,,,,,,,,,,,,889,889,,889,889,889,889,889,889',
'889,889,889,889,889,200,200,889,,200,,,,,,,,,200,200,,200,200,200,200',
'200,200,200,,,200,200,,,,200,200,200,200,,,,,,,,,,,,,200,200,,200,200',
'200,200,200,200,200,200,200,200,200,199,199,200,,199,,,,,,,,,199,199',
',199,199,199,199,199,199,199,,,199,199,,,,199,199,199,199,,,,,,199,',
',,,,,199,199,,199,199,199,199,199,199,199,199,199,199,199,570,570,199',
',570,,,,,,,,,570,570,,570,570,570,570,570,570,570,,,570,570,,,,570,570',
'570,570,,,,,,570,,,,,,,570,570,,570,570,570,570,570,570,570,570,570',
'570,570,433,433,570,,433,,,,,,,,,433,433,,433,433,433,433,433,433,433',
',,433,433,,,,433,433,433,433,,,,,,433,,,,,,,433,433,,433,433,433,433',
'433,433,433,433,433,433,433,434,434,433,,434,,,,,,,,,434,434,,434,434',
'434,434,434,434,434,,,434,434,,,,434,434,434,434,,,,,,,,,,,,,434,434',
',434,434,434,434,434,434,434,434,434,434,434,,,434' ]
        racc_action_check = arr = ::Array.new(23176, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1581,   nil,   267,   nil,  1887,  1449, 21583, 21337,  1411,
  1386,  1384,  1431,   656,  1080,    28,   nil,  1902,  2038,  3262,
  1451,   nil,  2446,  2582,  2718,   159,   149,  1358,   950,   nil,
  3398,  3534,  3670,   nil,  1323,   631,  1385,   562, 21078,  4486,
  4622,  1277,   605,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1222,   nil,  5166,  5302,  5438,   -11,  3818,  5846,  5982,   nil,
   nil,  6118,  6254,  6390,   nil, 22042,   nil,   nil,   nil,   nil,
   nil,   -38,   nil,   nil,   nil,   nil,   nil,  1222,  1213, 21706,
   nil,   nil,   nil,  7206,   nil,   nil,  7342,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1335,   nil,  7614,   nil,
   nil,   nil,  7750,  7886,  8022,  8158,  8294,  8430,   nil,   633,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 21930,  1184,   nil,  8974,  9110,  9246,  9382,  9518, 22882,
 22822,  9790,  9926, 10062,   nil,   678,   -33,  1233,   315,  1086,
  1131, 10878, 11014,   nil,   nil, 11150,  1117, 11422, 11558, 11694,
 11830, 11966, 12102, 12238, 12374, 12510, 12646, 12782, 12918, 13054,
 13190, 13326, 13462, 13598, 13734, 13870, 14006, 14142, 14278, 14414,
 14550, 14686, 14822,   nil,   nil,   nil,  3530,   nil,  1071,  1045,
   nil, 15366,  1061, 15638,   nil,   nil,   nil,   nil, 15774,   nil,
   nil, 22282, 22522,  1046, 16318, 16454,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16590,   635,  1751,   958, 17134,   952,   946,
   904, 17678, 17814,  1200,  1608,   961,  1633,   923,   885,    69,
   nil,   910,   817,   nil, 18902,   nil,   808,   911,   860,  1674,
   nil,   829,   nil, 19718,   nil, 19854,    33,   nil,   755,   241,
   344,   719,   696,   305,   547,   nil,   nil,   -22, 17690,   nil,
   nil,   nil,   419,   353,   nil,   255,   208,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  3656,   nil,   nil,   nil,   216,   nil,
   nil,   195,   315,    91,    -7, 20262, 19990,   369,   572,    -6,
   117,    -2,   106,   nil,  1673,   nil,    78,   nil,   nil, 18494,
   690,    23,   162,   333,   722,   128,   197,   418,   nil,   609,
   nil, 17542,   nil,   406,   nil,   174,   nil,   -53,   649,   134,
   nil,   720,   -49,   nil,   542,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   762, 21214,
   nil,   nil,   nil, 21460,   792,   nil,   nil,   678,   nil, 15230,
   779,   nil,   866,   nil,   nil,  1630,   967,   587,   -53,  1086,
   nil,   nil,   nil,   406,   973,   270,   nil,  9654,  8702,   nil,
  2718,   nil,   nil, 23002, 23062,  7478,   400,  7070,  6798,  6526,
   -11,   nil,  5302,  4486,  1676,   130,  1112,  1116,  1160,  1205,
  3541,  5846,  3671,  4350,  4214,  3942,  4078,  5710,  4622,  4758,
  4894,  5574,  5030,  2384,  2112,  5166,  5438,  1902,   -34,   nil,
   542,   nil,   406,   nil,   270,   nil,   nil,  1630,   nil,   nil,
  1494,     3,   nil,  1447,  1457,   713,  1448,  1548,   nil,   nil,
   678,   -27,    11,  1402,   nil,   nil,   134,  1399,  1352,   nil,
   nil,  1351,   814,  1380,   950, 22642, 22102,   725,  1355,   nil,
   nil,  1311,   nil,  1086,  1222,  1494, 22462, 22162,  3126,  2174,
  1417,  1377,  1291,   nil,   nil,  2854,   nil,   nil,  2990,   nil,
   nil,   nil,   nil,  3126,  3262,  1230,   nil,  2068,   nil,   nil,
  3806, 18506,   nil,   875,   nil,   nil,  1218,   nil,  3792,   nil,
  1154,  2296,   nil,   nil,  3942,  1257,   nil,   nil,  4894,   233,
   100,  1114,  1101,  5030,   nil,   nil,   639,   nil, 22582,  5574,
 22942,   nil,   nil, 10198,   -90, 10470,   nil, 18914,   nil,   nil,
   nil,    35,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   270,   nil,   nil,   nil,   868,   nil,   nil,   nil,
   nil,   nil, 10606,   827, 14958,   944, 15910, 16046,   768,   nil,
   nil,   nil, 16182,   709,   nil, 16862,   229,   365,   542,   814,
   650,  1766,   nil, 17950,   nil,  3682,   nil, 18086,   461,   nil,
   482, 18222,   nil,   nil,   nil,   nil,   nil,   nil, 18358,   nil,
   229,   114, 22402, 22222, 19038,  1494,   -23,   nil,   nil,  1313,
 19310, 19446,   nil,   663,   -67, 20534,    96,   nil,   148,    15,
    42,   224,   110,  1769,   277, 20942,  2582,   435,   452,     1,
   552,  4350,   nil,   nil,   328,   480,   596,   nil,   nil,   473,
   nil,   504,  1727,   600,   543,   592,   nil,   nil,   637,  3609,
   nil,   921,   nil,   760,   nil,   nil,   nil,   nil,   nil,   781,
   nil,   790, 20806, 20670,  1766,   nil,   729,   745, 20398,   408,
   nil,   111, 20126, 19582,  6402,   589,   783,   785,   787,   nil,
   788,   nil, 21818,   855,  1857, 19174,   nil,   nil,   nil,  2854,
   868, 18766, 18630,   nil,  2174,   nil,  2446,   nil,   nil,  3398,
   nil,  2310, 17406, 17270, 16998,    55,  2990,   nil,   962,  1062,
   nil,   nil,   970,   nil,   nil,   995,  1001,   600,  1087, 16726,
   nil,  1020,  1124,  1008,   792,   nil,   nil,  1138,   nil, 15502,
  1024,  1080,   nil,   nil,   nil,   nil,   nil,   nil, 22342,   nil,
  1845,   nil,   nil,   nil,   nil,  2568,  1176,   nil, 15094,  1197,
 11286, 10742,   nil,   nil,     0,   136,   nil,  1237,   nil,   nil,
  1238,  1257,  1143,   nil,  6266,   nil,  1980,   nil,   nil,   761,
 10334,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1191,  1176,
   nil,  2038,  8838,   nil,   nil,   nil,  1224,  1191,   nil,   nil,
   nil,  8566,   nil,   nil,    77,  6934,   nil,  1253,  1216,   nil,
   nil,    84,   nil,  1348,  1354,  6662,  5710,   nil,   nil,  4758,
   nil,   nil,   -69,  1277,  1280,   nil,  1290,  1286,   nil,   nil,
  6946,   nil,   nil,   nil,  4214,   nil,  4078,   248,    13,  1402,
   184,   nil,   nil,  2310,   nil,   nil,   nil,   418,  1766,  1478,
   nil,  2204,   nil,   nil,   nil,  1630,  1492,  1358, 22702, 22762,
  1472,   284,   nil,   nil,   nil,  1531,   nil,  1413,  1535,   nil,
  1460,    92,    46,    85,  1808,   nil,   nil,   nil,   nil,  1744 ]

racc_action_default = [
    -3,  -524,    -1,  -512,    -4,    -6,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -268,   -36,   -37,  -524,  -524,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -524,  -443,  -524,  -524,  -524,  -524,
  -524,  -514,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -502,  -270,  -524,  -523,  -494,  -287,  -523,  -524,  -524,  -292,
  -295,  -512,  -524,  -524,  -309,  -524,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -523,  -395,  -523,  -523,  -523,  -523,  -523,
  -422,  -428,  -429,  -432,  -433,  -434,  -435,  -436,  -437,  -438,
  -439,  -440,  -441,  -442,  -445,  -446,  -524,    -2,  -513,  -519,
  -520,  -521,  -524,  -524,  -524,  -524,  -524,    -3,   -13,  -524,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -524,   -18,  -107,   -10,  -524,  -524,  -524,  -523,  -524,
  -524,  -524,  -524,  -524,   -40,  -524,  -443,  -524,  -268,  -524,
  -524,   -10,  -524,   -41,  -218,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -359,  -361,   -46,  -227,  -239,  -253,  -253,
  -243,  -524,  -254,  -524,  -279,  -317,  -318,  -496,  -524,   -47,
   -48,  -524,  -524,   -53,  -523,  -524,  -286,  -364,  -371,  -373,
   -59,  -369,   -60,  -524,  -512,   -11,   -61,   -10,  -524,  -524,
   -66,   -69,   -10,   -80,  -524,  -524,   -87,  -282,  -514,  -524,
  -321,  -370,  -524,   -71,  -524,   -76,  -275,  -430,  -431,  -524,
  -203,  -204,  -219,  -524,  -515,   -10,  -514,  -228,  -514,  -516,
  -516,  -524,  -524,  -516,  -524,  -288,  -289,  -524,  -524,  -332,
  -333,  -340,  -523,  -462,  -347,  -523,  -523,  -358,  -461,  -463,
  -464,  -465,  -466,  -467,  -524,  -478,  -483,  -484,  -486,  -487,
  -488,  -524,   -43,  -524,  -524,  -524,  -524,  -512,  -524,  -513,
  -524,   -96,  -524,   -98,  -524,  -268,  -524,  -306,  -443,  -524,
  -100,  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -312,  -524,
  -492,  -524,  -393,  -524,  -408,  -524,  -410,  -524,  -524,  -524,
  -400,  -524,  -524,  -406,  -524,  -421,  -423,  -424,  -425,  -426,
   910,    -5,  -522,   -19,   -20,   -21,   -22,   -23,  -524,  -524,
   -15,   -16,   -17,  -524,  -524,   -25,   -33,  -183,  -254,  -524,
  -524,   -26,   -34,   -35,   -27,  -185,  -524,  -503,  -504,  -246,
  -366,  -505,  -506,  -503,  -246,  -504,  -368,  -508,  -509,   -32,
  -192,   -38,   -39,  -524,  -524,  -523,  -275,  -524,  -524,  -524,
  -524,  -285,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,
  -205,  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,
  -215,  -216,  -217,  -220,  -221,  -222,  -223,  -524,  -523,  -240,
  -524,  -241,  -524,  -251,  -524,  -255,  -499,  -246,  -503,  -504,
  -246,  -523,   -54,  -524,  -514,  -514,  -253,  -239,  -247,  -248,
  -524,  -523,  -523,  -524,  -281,    -9,  -513,  -524,   -62,  -273,
   -77,   -67,  -524,  -524,  -523,  -524,  -524,   -86,  -524,  -430,
  -431,   -73,   -78,  -524,  -524,  -524,  -524,  -524,  -224,  -524,
  -380,  -524,  -524,  -229,  -230,  -518,  -517,  -232,  -518,  -277,
  -278,  -495,  -329,   -10,   -10,  -524,  -331,  -524,  -349,  -356,
  -524,  -353,  -354,  -524,  -357,  -462,  -524,  -469,  -524,  -471,
  -473,  -477,  -485,  -489,   -10,  -322,  -323,  -324,   -10,  -524,
  -524,  -524,  -524,   -10,  -375,  -301,   -96,   -97,  -524,  -523,
  -524,  -304,  -447,  -524,  -524,  -524,  -310,  -460,  -314,  -510,
  -511,  -514,  -394,  -409,  -412,  -413,  -415,  -396,  -411,  -397,
  -398,  -399,  -524,  -402,  -404,  -405,  -524,  -427,    -7,   -14,
  -108,   -24,  -524,  -260,  -524,  -276,  -524,  -524,   -55,  -237,
  -238,  -365,  -524,   -57,  -367,  -524,  -503,  -504,  -503,  -504,
  -524,  -183,  -284,  -524,  -343,  -524,  -345,   -10,  -253,  -252,
  -256,  -524,  -497,  -498,   -50,  -362,   -51,  -363,   -10,  -233,
  -524,  -524,  -524,  -524,  -524,   -42,  -524,  -245,  -249,  -524,
   -10,   -10,  -280,   -12,   -62,  -524,   -70,   -75,  -524,  -503,
  -504,  -523,  -507,   -85,  -524,  -524,  -191,  -201,  -202,  -524,
  -523,  -523,  -271,  -272,  -516,  -524,  -524,  -330,  -341,  -524,
  -348,  -523,  -342,  -524,  -523,  -523,  -479,  -468,  -524,  -524,
  -476,  -523,  -325,  -523,  -293,  -326,  -327,  -328,  -296,  -524,
  -299,  -524,  -524,  -524,   -96,   -99,  -507,  -524,   -10,  -524,
  -449,  -524,   -10,   -10,  -460,  -524,  -491,  -491,  -491,  -459,
  -462,  -481,  -524,  -524,  -524,   -10,  -401,  -403,  -407,  -184,
  -258,  -524,  -524,   -29,  -187,   -30,  -188,   -56,   -31,  -189,
   -58,  -190,  -524,  -524,  -524,  -276,  -225,  -344,  -524,  -524,
  -242,  -257,  -524,  -234,  -235,  -523,  -523,  -514,  -524,  -524,
  -250,  -524,  -524,   -68,   -81,   -79,  -283,  -523,  -338,   -10,
  -381,  -523,  -382,  -383,  -231,  -334,  -335,  -355,  -524,  -275,
  -524,  -351,  -352,  -470,  -472,  -475,  -524,  -336,  -524,  -524,
   -10,   -10,  -298,  -300,  -524,  -524,  -276,  -524,  -448,  -307,
  -524,  -524,  -514,  -451,  -524,  -455,  -524,  -457,  -458,  -524,
  -524,  -315,  -493,  -414,  -417,  -418,  -419,  -420,  -524,  -259,
   -28,  -186,  -524,  -346,  -360,   -52,  -524,  -253,  -372,  -374,
    -8,   -10,  -387,  -339,  -524,  -524,  -385,  -274,  -523,  -474,
  -290,  -524,  -291,  -524,  -524,  -524,   -10,  -302,  -305,   -10,
  -311,  -313,  -524,  -491,  -491,  -490,  -491,  -524,  -482,  -480,
  -460,  -416,  -236,  -244,  -524,  -386,   -10,   -88,  -524,  -524,
   -95,  -384,  -350,   -10,  -294,  -297,  -256,  -523,   -10,  -524,
  -450,  -524,  -453,  -454,  -456,   -10,  -380,  -523,  -524,  -524,
   -94,  -523,  -376,  -377,  -378,  -524,  -308,  -491,  -524,  -379,
  -524,  -503,  -504,  -507,   -93,  -337,  -303,  -452,  -316,   -89 ]

clist = [
'13,303,562,670,247,247,247,290,290,471,311,310,313,521,319,485,10,205',
'205,554,558,327,205,205,205,511,12,406,413,97,13,284,284,108,193,308',
'368,539,290,290,542,544,116,116,482,356,10,280,98,629,386,629,205,205',
'713,686,12,205,205,276,278,205,284,354,649,632,5,113,113,647,716,293',
'343,344,524,527,347,635,531,567,637,263,270,272,678,547,786,348,694',
'698,583,858,2,375,377,345,593,384,13,790,346,213,205,205,205,205,13',
'13,681,546,791,703,685,101,10,719,878,393,394,395,396,632,10,10,12,113',
'767,708,35,575,849,359,12,12,805,807,808,712,577,113,248,248,248,204',
'627,722,860,317,718,789,532,571,684,316,315,416,310,638,35,283,283,312',
'386,370,5,488,858,650,651,305,468,101,397,5,491,492,892,702,306,771',
'308,834,372,342,342,373,369,342,379,592,283,358,578,358,13,205,205,205',
'205,398,382,205,205,205,245,259,260,716,813,724,10,13,205,725,802,699',
'853,399,350,192,12,830,784,629,391,1,35,10,342,342,342,342,,656,35,35',
',12,,,,,,,,,487,247,508,,,113,719,,,247,,290,,,428,,,,205,205,522,,523',
',290,882,883,205,884,,535,13,405,411,414,284,13,327,429,718,905,,,,',
',,10,284,705,,,10,547,495,,690,12,,13,276,497,12,727,512,276,503,410',
'410,907,,,686,496,501,10,35,688,847,,,678,431,432,,12,,893,,290,,885',
'440,35,,576,855,,855,205,205,855,,,,838,,716,,635,637,,,354,559,560',
',,,,,,,899,,205,,561,,854,,856,,419,424,,486,248,101,,763,,750,737,',
'248,620,310,740,757,777,,719,781,782,,,,,35,,,,283,35,,,,,,797,308,',
'855,800,801,283,,,599,,,628,600,,718,,35,116,205,,,116,774,547,477,480',
'629,640,641,484,489,,,,,897,,,493,,101,,113,,658,310,113,,,572,,,,846',
'342,342,,608,279,,,290,613,,,,674,,,308,358,,,205,,,14,428,,13,581,',
',,,284,772,205,,,,,,866,,10,,,,290,873,512,205,,,12,14,286,286,707,310',
',,,894,634,13,13,636,839,,,,682,723,,,,,,,,10,10,308,,872,13,286,355',
'879,13,12,12,,653,13,,,428,,,205,10,,,205,10,205,,428,,10,12,,,748,12',
',,863,709,12,327,14,,898,,,,,,14,14,,628,,,,205,205,,,,,205,419,424',
',306,,,,,,,,35,,758,13,428,,283,290,,,,,,,13,404,,290,,10,205,669,,267',
'271,,13,13,,12,10,284,279,,,,,35,35,,12,284,10,10,358,695,695,512,,',
',,12,12,,,,765,35,,710,661,35,14,,733,735,35,,811,,738,661,,,342,,711',
',205,14,,,,13,,,,13,13,,,,826,795,,,,279,307,10,13,320,279,10,10,,,205',
',12,,,,12,12,,10,,374,,376,376,380,383,376,661,12,,,,35,,,,,,,852,,',
',35,,,13,14,,,,286,14,,,35,35,,,113,283,,10,,286,205,410,13,13,,283',
',12,,,14,,,,,841,,,10,10,,,,290,,,,820,12,12,,798,794,799,755,756,,803',
',,,342,,13,,,,868,35,,428,,35,35,,,900,310,13,10,,13,,871,355,35,,,',
'12,,,,,10,,,10,13,,307,308,,,12,13,,12,,827,13,,,,10,,,13,,205,,10,',
',12,,10,,,35,,12,,10,,,12,695,,,,,267,12,271,,342,,,,35,35,,,,,,,,,',
',,,,,483,,,,,,,,,,,,,,,428,,,,,,,,,,35,,,,867,,,,,,,,,,,35,,214,35,675',
'676,246,246,246,,,,,,,14,,,,,35,286,300,301,302,691,,35,,693,,,35,,701',
',,246,246,35,,,,,,,,,,,,,14,14,,,,,,355,,,,,,,610,,,,,614,,14,,,,14',
',,,,14,,,,,,,,,,,,661,,,,749,,,,,,,,,,,752,,,,,,609,,,,,,761,762,,610',
',,610,,,,307,,,314,,,,,,,,,,,,14,,,,,,,,,,,14,,,,,,,624,,,,,14,14,,',
'609,286,,609,624,,407,246,415,246,,286,430,,624,624,,,,,,,,818,,,214',
'307,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457',
'458,459,460,461,462,463,464,465,466,467,14,,,,14,14,,,246,,246,,,833',
',246,817,14,,,,246,246,,,,,,,,246,,,,843,844,,,307,,,,,,,,,,408,412',
',,,,,,,,,,518,14,,,,,,,,,,,,,,865,,,,,,610,14,14,614,,,,,,877,,,,,,',
',,,,,,,473,,475,,,,886,476,,,,,,891,,,,,895,14,,,,870,,,609,,,,,,,,14',
'768,773,14,,,,,,,,,,,,,,,,,14,,768,,768,,,14,246,,,,14,,,,,610,610,14',
',,,,,,,,,,,,,,246,,430,621,415,,,,,,,,,,,,,,,,,,,,,,,,,,,,609,609,,246',
',246,,246,,,,,832,,,,836,,,,,289,289,645,,,,,289,289,289,,,,,,,246,603',
',,,,,289,,666,667,668,,,,289,289,,,,,246,,,246,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,630,,314,246,633,,,,,,,,,,,,,,,,646,,,768,,,,,,,,,,307',
',,729,768,246,,734,736,,,,,739,,,741,,,,,,630,,746,314,,,,,,,246,,,',
',,,,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,246,289,,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,730,,246,,,,,,289,,289,,,,,289,,,,,,,,,,,,751,,,,246',
'821,,,,,,289,,630,,734,736,739,,,,,,,289,,,,,,,,246,289,,,,,,,770,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,408,,,,,,,,,,,,246,,,,,,289,,,,,,821,,,',
',819,,,,,,,,,,,,,,,,,,246,,,,,,,,,,408,,,,,,,,,246,,289,,,,,,,,,,,,',
',,,,,,,,246,,,,,,,289,289,289,,,,,,,,,,859,,,,,,,,,,,,,,,,,,,,,289,',
'289,,289,,,,,,,,,,876,,,,,,,,,,,,,,,,,,289,876,,,,,,,,,,289,289,289',
',,,,,,,,,289,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,,,,289,,,,,,,',
'289,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,289,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,289,289',
'289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,,,,,,,,,',
',,289' ]
        racc_goto_table = arr = ::Array.new(2280, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,51,78,10,29,29,29,52,52,59,22,56,56,8,101,32,17,21,21,75,75,104,21',
'21,21,43,20,24,24,4,21,21,21,14,14,29,47,106,52,52,106,106,50,50,35',
'46,17,41,6,60,47,60,21,21,81,137,20,21,21,38,39,21,21,21,61,144,7,48',
'48,60,107,42,16,16,55,55,16,58,55,45,58,34,34,34,103,135,76,4,77,77',
'126,141,2,123,123,85,126,123,21,86,87,18,21,21,21,21,21,21,108,138,88',
'89,108,80,17,105,90,16,16,16,16,144,17,17,20,48,11,91,44,92,93,94,20',
'20,134,134,134,95,96,48,54,54,54,26,36,97,98,99,108,11,100,79,102,74',
'72,22,56,36,44,44,44,71,47,70,7,62,141,36,36,84,110,80,7,7,112,113,114',
'115,26,116,29,117,121,26,26,122,82,26,124,125,44,44,83,44,21,21,21,21',
'21,2,127,21,21,21,31,31,31,107,128,129,17,21,21,130,132,78,133,27,19',
'15,20,12,139,60,5,1,44,17,26,26,26,26,,43,44,44,,20,,,,,,,,,29,29,51',
',,48,105,,,29,,52,,,48,,,,21,21,51,,51,,52,134,134,21,134,,101,21,18',
'18,18,21,21,104,18,108,76,,,,,,,17,21,45,,,17,135,4,,135,20,,21,38,39',
'20,126,41,38,39,54,54,134,,,137,6,42,17,44,138,77,,,103,26,26,,20,,11',
',52,,81,26,44,,46,105,,105,21,21,105,,,,108,,107,,58,58,,,21,16,16,',
',,,,,,10,,21,,4,,108,,108,,33,33,,54,54,80,,43,,59,35,,54,22,56,35,32',
'106,,105,106,106,,,,,44,,,,44,44,,,,,,8,29,,105,8,8,44,,,14,,,56,14',
',108,,44,50,21,,,50,55,135,33,33,60,51,51,31,31,,,,,108,,,31,,80,,48',
',22,56,48,,,80,,,,75,26,26,,34,9,,,52,34,,,,56,,,29,44,,,21,,,23,48',
',21,26,,,,,21,24,21,,,,,,75,,17,,,,52,75,41,21,,,20,23,23,23,22,56,',
',,78,34,21,21,34,135,,,,21,51,,,,,,,,17,17,29,,106,21,23,23,8,21,20',
'20,,7,21,,,48,,,21,17,,,21,17,21,,48,,17,20,,,101,20,,,59,16,20,104',
'23,,8,,,,,,23,23,,56,,,,21,21,,,,,21,33,33,,26,,,,,,,,44,,29,21,48,',
'44,52,,,,,,,21,9,,52,,17,21,26,,57,57,,21,21,,20,17,21,9,,,,,44,44,',
'20,21,17,17,44,80,80,41,,,,,20,20,,,,41,44,,80,33,44,23,,18,18,44,,47',
',18,33,,,26,,26,,21,23,,,,21,,,,21,21,,,,51,16,,,,9,53,17,21,53,9,17',
'17,,,21,,20,,,,20,20,,17,,53,,53,53,53,53,53,33,20,,,,44,,,,,,,51,,',
',44,,,21,23,,,,23,23,,,44,44,,,48,44,,17,,23,21,54,21,21,,44,,20,,,23',
',,,,16,,,17,17,,,,52,,,,18,20,20,,80,54,80,33,33,,80,,,,26,,21,,,,21',
'44,,48,,44,44,,,22,56,21,17,,21,,17,23,44,,,,20,,,,,17,,,17,21,,53,29',
',,20,21,,20,,54,21,,,,17,,,21,,21,,17,,,20,,17,,,44,,20,,17,,,20,80',
',,,,57,20,57,,26,,,,44,44,,,,,,,,,,,,,,,53,,,,,,,,,,,,,,,48,,,,,,,,',
',44,,,,44,,,,,,,,,,,44,,28,44,9,9,28,28,28,,,,,,,23,,,,,44,23,28,28',
'28,9,,44,,9,,,44,,9,,,28,28,44,,,,,,,,,,,,,23,23,,,,,,23,,,,,,,57,,',
',,57,,23,,,,23,,,,,23,,,,,,,,,,,,33,,,,9,,,,,,,,,,,9,,,,,,53,,,,,,9',
'9,,57,,,57,,,,53,,,25,,,,,,,,,,,,23,,,,,,,,,,,23,,,,,,,53,,,,,23,23',
',,53,23,,53,53,,28,28,28,28,,23,28,,53,53,,,,,,,,9,,,28,53,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'23,,,,23,23,,,28,,28,,,9,,28,23,23,,,,28,28,,,,,,,,28,,,,9,9,,,53,,',
',,,,,,,25,25,,,,,,,,,,,28,23,,,,,,,,,,,,,,9,,,,,,57,23,23,57,,,,,,9',
',,,,,,,,,,,,,25,,25,,,,9,25,,,,,,9,,,,,9,23,,,,23,,,53,,,,,,,,23,53',
'53,23,,,,,,,,,,,,,,,,,23,,53,,53,,,23,28,,,,23,,,,,57,57,23,,,,,,,,',
',,,,,,28,,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,53,,28,,28,,28,,,,',
'53,,,,53,,,,,37,37,28,,,,,37,37,37,,,,,,,28,25,,,,,,37,,28,28,28,,,',
'37,37,,,,,28,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,25,28,25',
',,,,,,,,,,,,,,,25,,,53,,,,,,,,,,53,,,28,53,28,,28,28,,,,,28,,,28,,,',
',,25,,28,25,,,,,,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,28,37',
',37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,25,,28,,,,,,37,,37,,,,,37,,,,,,,,,,,,25,,,,28,28,,,,,,37,,25',
',28,28,28,,,,,,,37,,,,,,,,28,37,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,,,,,,,,,,,28,,,,,,37,,,,,,28,,,,,25,,,,,,,,,,,,,,,,,,28,,,,,',
',,,,25,,,,,,,,,28,,37,,,,,,,,,,,,,,,,,,,,,28,,,,,,,37,37,37,,,,,,,,',
',25,,,,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,,,,25,,,,,,,,,,,,,,,,,,37,25',
',,,,,,,,,37,37,37,,,,,,,,,,37,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,',
',37,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,37',
'37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2280, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   225,    92,   nil,    26,   126,    45,    66,  -292,   445,
  -517,  -544,  -546,   nil,    26,   211,    15,    16,    83,   156,
    26,     0,   -43,   493,  -168,  1054,   126,   109,   958,   -18,
   nil,   182,  -249,   180,    55,  -219,  -324,  1415,    29,    30,
   nil,    16,    39,  -269,   128,  -273,   -18,   -29,    60,   nil,
    35,   -40,   -24,   670,   118,  -235,   -42,   621,  -400,  -240,
  -421,  -426,  -100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    98,   107,    99,   nil,    97,  -324,  -605,  -471,  -346,  -205,
   110,  -523,   121,  -177,   118,    36,  -595,    40,  -588,  -454,
  -731,  -444,  -228,  -669,    67,  -439,  -230,  -433,  -665,    91,
  -167,   -42,  -389,  -453,   -35,  -462,  -285,  -507,  -429,   nil,
   -73,   nil,   -94,   -94,  -701,  -387,  -492,  -590,   nil,   nil,
   nil,   111,   112,    18,   111,  -190,  -283,   122,  -516,  -376,
  -373,   nil,  -500,  -588,  -582,  -249,   nil,  -486,  -225,  -467,
   nil,  -715,   nil,   nil,  -407 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   520,
   nil,   787,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   664,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   353,   nil,   115,   422,   114,
    69,   nil,    42,   538,   309,   nil,   249,   420,   611,   469,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   555,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   322,   321,   680,   324,   nil,   325,   326,   244,
   nil,   426,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,
    71,    72,   nil,   nil,   nil,   nil,   588,   nil,   nil,   nil,
   nil,   385,   715,   717,   nil,   333,   328,   335,   nil,   549,
   550,   721,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 139, :_reduce_none,
  2, 140, :_reduce_2,
  0, 141, :_reduce_3,
  1, 141, :_reduce_4,
  3, 141, :_reduce_5,
  1, 143, :_reduce_none,
  4, 143, :_reduce_7,
  4, 146, :_reduce_8,
  2, 147, :_reduce_9,
  0, 151, :_reduce_10,
  1, 151, :_reduce_11,
  3, 151, :_reduce_12,
  0, 165, :_reduce_13,
  4, 145, :_reduce_14,
  3, 145, :_reduce_15,
  3, 145, :_reduce_none,
  3, 145, :_reduce_17,
  2, 145, :_reduce_18,
  3, 145, :_reduce_19,
  3, 145, :_reduce_20,
  3, 145, :_reduce_21,
  3, 145, :_reduce_22,
  3, 145, :_reduce_23,
  4, 145, :_reduce_none,
  3, 145, :_reduce_25,
  3, 145, :_reduce_26,
  3, 145, :_reduce_27,
  6, 145, :_reduce_none,
  5, 145, :_reduce_29,
  5, 145, :_reduce_none,
  5, 145, :_reduce_none,
  3, 145, :_reduce_none,
  3, 145, :_reduce_33,
  3, 145, :_reduce_34,
  3, 145, :_reduce_35,
  1, 145, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_183,
  5, 166, :_reduce_184,
  3, 166, :_reduce_185,
  6, 166, :_reduce_186,
  5, 166, :_reduce_187,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  3, 166, :_reduce_200,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_203,
  2, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  3, 166, :_reduce_217,
  2, 166, :_reduce_218,
  2, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  3, 166, :_reduce_224,
  5, 166, :_reduce_225,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_228,
  2, 160, :_reduce_229,
  2, 160, :_reduce_230,
  4, 160, :_reduce_231,
  2, 160, :_reduce_232,
  3, 195, :_reduce_233,
  4, 195, :_reduce_234,
  4, 195, :_reduce_none,
  6, 195, :_reduce_none,
  1, 196, :_reduce_237,
  1, 196, :_reduce_none,
  1, 169, :_reduce_239,
  2, 169, :_reduce_240,
  2, 169, :_reduce_241,
  4, 169, :_reduce_242,
  1, 169, :_reduce_243,
  4, 199, :_reduce_none,
  1, 199, :_reduce_none,
  0, 201, :_reduce_246,
  2, 172, :_reduce_247,
  1, 200, :_reduce_none,
  2, 200, :_reduce_249,
  3, 200, :_reduce_250,
  2, 198, :_reduce_251,
  2, 197, :_reduce_252,
  0, 197, :_reduce_253,
  1, 192, :_reduce_254,
  2, 192, :_reduce_255,
  3, 192, :_reduce_256,
  4, 192, :_reduce_257,
  3, 162, :_reduce_258,
  4, 162, :_reduce_259,
  2, 162, :_reduce_260,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 222, :_reduce_270,
  4, 190, :_reduce_271,
  4, 190, :_reduce_272,
  3, 190, :_reduce_273,
  3, 190, :_reduce_274,
  2, 190, :_reduce_275,
  4, 190, :_reduce_276,
  3, 190, :_reduce_277,
  3, 190, :_reduce_278,
  1, 190, :_reduce_279,
  4, 190, :_reduce_280,
  3, 190, :_reduce_281,
  1, 190, :_reduce_282,
  5, 190, :_reduce_283,
  4, 190, :_reduce_284,
  3, 190, :_reduce_285,
  2, 190, :_reduce_286,
  1, 190, :_reduce_none,
  2, 190, :_reduce_288,
  2, 190, :_reduce_289,
  6, 190, :_reduce_290,
  6, 190, :_reduce_291,
  0, 223, :_reduce_292,
  0, 224, :_reduce_293,
  7, 190, :_reduce_294,
  0, 225, :_reduce_295,
  0, 226, :_reduce_296,
  7, 190, :_reduce_297,
  5, 190, :_reduce_298,
  4, 190, :_reduce_299,
  5, 190, :_reduce_300,
  0, 227, :_reduce_301,
  0, 228, :_reduce_302,
  9, 190, :_reduce_none,
  0, 229, :_reduce_304,
  6, 190, :_reduce_305,
  0, 230, :_reduce_306,
  0, 231, :_reduce_307,
  8, 190, :_reduce_308,
  0, 232, :_reduce_309,
  0, 233, :_reduce_310,
  6, 190, :_reduce_311,
  0, 234, :_reduce_312,
  6, 190, :_reduce_313,
  0, 235, :_reduce_314,
  0, 236, :_reduce_315,
  9, 190, :_reduce_316,
  1, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 237, :_reduce_330,
  2, 237, :_reduce_331,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  3, 238, :_reduce_334,
  3, 238, :_reduce_335,
  1, 214, :_reduce_336,
  5, 214, :_reduce_337,
  1, 149, :_reduce_none,
  2, 149, :_reduce_339,
  1, 240, :_reduce_340,
  3, 240, :_reduce_341,
  3, 241, :_reduce_342,
  1, 174, :_reduce_none,
  2, 174, :_reduce_344,
  1, 174, :_reduce_345,
  3, 174, :_reduce_346,
  1, 242, :_reduce_347,
  2, 244, :_reduce_348,
  1, 244, :_reduce_349,
  6, 239, :_reduce_350,
  4, 239, :_reduce_351,
  4, 239, :_reduce_352,
  2, 239, :_reduce_353,
  2, 239, :_reduce_354,
  4, 239, :_reduce_355,
  2, 239, :_reduce_356,
  2, 239, :_reduce_357,
  1, 239, :_reduce_358,
  0, 248, :_reduce_359,
  5, 247, :_reduce_360,
  2, 170, :_reduce_361,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_364,
  4, 211, :_reduce_365,
  3, 211, :_reduce_366,
  4, 211, :_reduce_367,
  3, 211, :_reduce_368,
  2, 211, :_reduce_369,
  1, 211, :_reduce_370,
  0, 250, :_reduce_371,
  5, 210, :_reduce_372,
  0, 251, :_reduce_373,
  5, 210, :_reduce_374,
  0, 253, :_reduce_375,
  6, 216, :_reduce_376,
  1, 252, :_reduce_377,
  1, 252, :_reduce_none,
  6, 148, :_reduce_379,
  0, 148, :_reduce_380,
  1, 254, :_reduce_381,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  2, 255, :_reduce_384,
  1, 255, :_reduce_385,
  2, 150, :_reduce_386,
  1, 150, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_391,
  1, 258, :_reduce_none,
  2, 258, :_reduce_none,
  3, 259, :_reduce_394,
  1, 259, :_reduce_395,
  3, 204, :_reduce_396,
  3, 205, :_reduce_397,
  3, 206, :_reduce_398,
  3, 206, :_reduce_399,
  1, 262, :_reduce_400,
  3, 262, :_reduce_401,
  1, 263, :_reduce_402,
  2, 263, :_reduce_403,
  3, 207, :_reduce_404,
  3, 207, :_reduce_405,
  1, 265, :_reduce_406,
  3, 265, :_reduce_407,
  1, 260, :_reduce_408,
  2, 260, :_reduce_409,
  1, 261, :_reduce_410,
  2, 261, :_reduce_411,
  1, 264, :_reduce_412,
  0, 267, :_reduce_413,
  3, 264, :_reduce_414,
  0, 268, :_reduce_415,
  4, 264, :_reduce_416,
  1, 266, :_reduce_417,
  1, 266, :_reduce_418,
  1, 266, :_reduce_419,
  1, 266, :_reduce_none,
  2, 188, :_reduce_421,
  1, 188, :_reduce_422,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  3, 257, :_reduce_427,
  1, 256, :_reduce_428,
  1, 256, :_reduce_429,
  2, 256, :_reduce_none,
  2, 256, :_reduce_none,
  1, 182, :_reduce_432,
  1, 182, :_reduce_433,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 208, :_reduce_443,
  1, 158, :_reduce_444,
  1, 161, :_reduce_445,
  1, 161, :_reduce_none,
  1, 217, :_reduce_447,
  3, 217, :_reduce_448,
  2, 217, :_reduce_449,
  4, 219, :_reduce_450,
  2, 219, :_reduce_451,
  6, 270, :_reduce_452,
  4, 270, :_reduce_453,
  4, 270, :_reduce_454,
  2, 270, :_reduce_455,
  4, 270, :_reduce_456,
  2, 270, :_reduce_457,
  2, 270, :_reduce_458,
  1, 270, :_reduce_459,
  0, 270, :_reduce_460,
  1, 273, :_reduce_none,
  1, 273, :_reduce_462,
  1, 274, :_reduce_463,
  1, 274, :_reduce_464,
  1, 274, :_reduce_465,
  1, 274, :_reduce_466,
  1, 275, :_reduce_467,
  3, 275, :_reduce_468,
  1, 277, :_reduce_469,
  3, 277, :_reduce_none,
  1, 278, :_reduce_471,
  3, 278, :_reduce_472,
  1, 276, :_reduce_none,
  4, 276, :_reduce_none,
  3, 276, :_reduce_none,
  2, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 245, :_reduce_478,
  3, 245, :_reduce_479,
  3, 279, :_reduce_480,
  1, 271, :_reduce_481,
  3, 271, :_reduce_482,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  2, 246, :_reduce_485,
  1, 246, :_reduce_486,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 243, :_reduce_489,
  2, 272, :_reduce_490,
  0, 272, :_reduce_491,
  1, 220, :_reduce_492,
  4, 220, :_reduce_493,
  0, 209, :_reduce_494,
  2, 209, :_reduce_495,
  1, 194, :_reduce_496,
  3, 194, :_reduce_497,
  3, 282, :_reduce_498,
  2, 282, :_reduce_499,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 249, :_reduce_none,
  1, 249, :_reduce_none,
  1, 249, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 144, :_reduce_none,
  2, 144, :_reduce_none,
  0, 191, :_reduce_523 ]

racc_reduce_n = 524

racc_shift_n = 910

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137 }

racc_nt_base = 138

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_259(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

def _reduce_302(val, _values, result)
                      # ...
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

# reduce 393 omitted

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

# reduce 430 omitted

# reduce 431 omitted

def _reduce_432(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 446 omitted

def _reduce_447(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_448(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_498(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

def _reduce_523(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
